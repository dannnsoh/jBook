{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/Ryzen/Desktop/jbook/packages/local-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/Ryzen/Desktop/jbook/packages/local-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import axios from\"axios\";import localforage from\"localforage\";var fileCache=localforage.createInstance({name:\"filecache\"});export var fetchPlugin=function fetchPlugin(inputCode){return{// name is mainly to identify this plugin for debugging purposes\nname:\"fetch-plugin\",setup:function setup(build){// onLoad event listener (override esbuild's default file loading process)\n// handle root entry file of index.js\nbuild.onLoad({filter:/(^index\\.js$)/},function(){return{loader:\"jsx\",contents:inputCode};});// handle check to see if file has already been fetched and if it is in the cache\nbuild.onLoad({filter:/.*/},/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(args){var cachedResult;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fileCache.getItem(args.path);case 2:cachedResult=_context.sent;if(!cachedResult){_context.next=5;break;}return _context.abrupt(\"return\",cachedResult);case 5:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}());//handle css files\nbuild.onLoad({filter:/(.css$)/},/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(args){var _yield$axios$get,data,request,escaped,contents,result;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return axios.get(args.path);case 2:_yield$axios$get=_context2.sent;data=_yield$axios$get.data;request=_yield$axios$get.request;// workaround to get css files as esbuild does not support importing css files from js files as of now\n// comb through the css file to replace all new lines, single and double quotes\nescaped=data.replace(/\\n/g,\"\").replace(/\"/g,'\\\\\"').replace(/'/g,\"\\\\'\");contents=\"\\n\\t\\t\\t\\t\\tconst style = document.createElement(\\\"style\\\");\\n\\t\\t\\t\\t\\tstyle.innerText = \\\"\".concat(escaped,\"\\\";\\n\\t\\t\\t\\t\\tdocument.head.appendChild(style);\\n\\t\\t\\t\\t\\t\");result={loader:\"jsx\",contents:contents,resolveDir:new URL(\"./\",request.responseURL).pathname};_context2.next=10;return fileCache.setItem(args.path,result);case 10:return _context2.abrupt(\"return\",result);case 11:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x2){return _ref2.apply(this,arguments);};}());// handle all other files\nbuild.onLoad({filter:/.*/},/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(args){var _yield$axios$get2,data,request,result;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return axios.get(args.path);case 2:_yield$axios$get2=_context3.sent;data=_yield$axios$get2.data;request=_yield$axios$get2.request;result={loader:\"jsx\",contents:data,resolveDir:new URL(\"./\",request.responseURL).pathname};_context3.next=8;return fileCache.setItem(args.path,result);case 8:return _context3.abrupt(\"return\",result);case 9:case\"end\":return _context3.stop();}}},_callee3);}));return function(_x3){return _ref3.apply(this,arguments);};}());}};};","map":{"version":3,"sources":["C:/Users/Ryzen/Desktop/jbook/packages/local-client/src/bundler/plugins/fetch-plugin.ts"],"names":["axios","localforage","fileCache","createInstance","name","fetchPlugin","inputCode","setup","build","onLoad","filter","loader","contents","args","getItem","path","cachedResult","get","data","request","escaped","replace","result","resolveDir","URL","responseURL","pathname","setItem"],"mappings":"+UACA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,WAAP,KAAwB,aAAxB,CAEA,GAAMC,CAAAA,SAAS,CAAGD,WAAW,CAACE,cAAZ,CAA2B,CAC5CC,IAAI,CAAE,WADsC,CAA3B,CAAlB,CAIA,MAAO,IAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,SAAD,CAAuB,CACjD,MAAO,CACN;AACAF,IAAI,CAAE,cAFA,CAGNG,KAHM,gBAGAC,KAHA,CAG4B,CACjC;AAEA;AACAA,KAAK,CAACC,MAAN,CAAa,CAAEC,MAAM,CAAE,eAAV,CAAb,CAA0C,UAAM,CAC/C,MAAO,CACNC,MAAM,CAAE,KADF,CAENC,QAAQ,CAAEN,SAFJ,CAAP,CAIA,CALD,EAOA;AACAE,KAAK,CAACC,MAAN,CAAa,CAAEC,MAAM,CAAE,IAAV,CAAb,0FAA+B,iBAAOG,IAAP,yJACHX,CAAAA,SAAS,CAACY,OAAV,CAAwCD,IAAI,CAACE,IAA7C,CADG,QACxBC,YADwB,mBAG1BA,YAH0B,yDAItBA,YAJsB,wDAA/B,gEAQA;AACAR,KAAK,CAACC,MAAN,CAAa,CAAEC,MAAM,CAAE,SAAV,CAAb,2FAAoC,kBAAOG,IAAP,uMACHb,CAAAA,KAAK,CAACiB,GAAN,CAAUJ,IAAI,CAACE,IAAf,CADG,wCAC3BG,IAD2B,kBAC3BA,IAD2B,CACrBC,OADqB,kBACrBA,OADqB,CAEnC;AACA;AACMC,OAJ6B,CAInBF,IAAI,CAACG,OAAL,CAAa,KAAb,CAAoB,EAApB,EAAwBA,OAAxB,CAAgC,IAAhC,CAAsC,KAAtC,EAA6CA,OAA7C,CAAqD,IAArD,CAA2D,KAA3D,CAJmB,CAK7BT,QAL6B,uGAObQ,OAPa,iEAU7BE,MAV6B,CAUE,CACpCX,MAAM,CAAE,KAD4B,CAEpCC,QAAQ,CAAEA,QAF0B,CAGpCW,UAAU,CAAE,GAAIC,CAAAA,GAAJ,CAAQ,IAAR,CAAcL,OAAO,CAACM,WAAtB,EAAmCC,QAHX,CAVF,yBAe7BxB,CAAAA,SAAS,CAACyB,OAAV,CAAkBd,IAAI,CAACE,IAAvB,CAA6BO,MAA7B,CAf6B,0CAgB5BA,MAhB4B,2DAApC,kEAmBA;AACAd,KAAK,CAACC,MAAN,CAAa,CAAEC,MAAM,CAAE,IAAV,CAAb,2FAA+B,kBAAOG,IAAP,uLACEb,CAAAA,KAAK,CAACiB,GAAN,CAAUJ,IAAI,CAACE,IAAf,CADF,yCACtBG,IADsB,mBACtBA,IADsB,CAChBC,OADgB,mBAChBA,OADgB,CAExBG,MAFwB,CAEO,CACpCX,MAAM,CAAE,KAD4B,CAEpCC,QAAQ,CAAEM,IAF0B,CAGpCK,UAAU,CAAE,GAAIC,CAAAA,GAAJ,CAAQ,IAAR,CAAcL,OAAO,CAACM,WAAtB,EAAmCC,QAHX,CAFP,wBAOxBxB,CAAAA,SAAS,CAACyB,OAAV,CAAkBd,IAAI,CAACE,IAAvB,CAA6BO,MAA7B,CAPwB,yCAQvBA,MARuB,0DAA/B,kEAUA,CAtDK,CAAP,CAwDA,CAzDM","sourcesContent":["import * as esbuild from \"esbuild-wasm\";\r\nimport axios from \"axios\";\r\nimport localforage from \"localforage\";\r\n\r\nconst fileCache = localforage.createInstance({\r\n\tname: \"filecache\"\r\n});\r\n\r\nexport const fetchPlugin = (inputCode: string) => {\r\n\treturn {\r\n\t\t// name is mainly to identify this plugin for debugging purposes\r\n\t\tname: \"fetch-plugin\",\r\n\t\tsetup(build: esbuild.PluginBuild) {\r\n\t\t\t// onLoad event listener (override esbuild's default file loading process)\r\n\r\n\t\t\t// handle root entry file of index.js\r\n\t\t\tbuild.onLoad({ filter: /(^index\\.js$)/ }, () => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tloader: \"jsx\",\r\n\t\t\t\t\tcontents: inputCode\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\t\t// handle check to see if file has already been fetched and if it is in the cache\r\n\t\t\tbuild.onLoad({ filter: /.*/ }, async (args: any) => {\r\n\t\t\t\tconst cachedResult = await fileCache.getItem<esbuild.OnLoadResult>(args.path);\r\n\t\t\t\t// If it is in the cache, return it immediately\r\n\t\t\t\tif (cachedResult) {\r\n\t\t\t\t\treturn cachedResult;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\t//handle css files\r\n\t\t\tbuild.onLoad({ filter: /(.css$)/ }, async (args: any) => {\r\n\t\t\t\tconst { data, request } = await axios.get(args.path);\r\n\t\t\t\t// workaround to get css files as esbuild does not support importing css files from js files as of now\r\n\t\t\t\t// comb through the css file to replace all new lines, single and double quotes\r\n\t\t\t\tconst escaped = data.replace(/\\n/g, \"\").replace(/\"/g, '\\\\\"').replace(/'/g, \"\\\\'\");\r\n\t\t\t\tconst contents = `\r\n\t\t\t\t\tconst style = document.createElement(\"style\");\r\n\t\t\t\t\tstyle.innerText = \"${escaped}\";\r\n\t\t\t\t\tdocument.head.appendChild(style);\r\n\t\t\t\t\t`;\r\n\t\t\t\tconst result: esbuild.OnLoadResult = {\r\n\t\t\t\t\tloader: \"jsx\",\r\n\t\t\t\t\tcontents: contents,\r\n\t\t\t\t\tresolveDir: new URL(\"./\", request.responseURL).pathname\r\n\t\t\t\t};\r\n\t\t\t\tawait fileCache.setItem(args.path, result);\r\n\t\t\t\treturn result;\r\n\t\t\t});\r\n\r\n\t\t\t// handle all other files\r\n\t\t\tbuild.onLoad({ filter: /.*/ }, async (args: any) => {\r\n\t\t\t\tconst { data, request } = await axios.get(args.path);\r\n\t\t\t\tconst result: esbuild.OnLoadResult = {\r\n\t\t\t\t\tloader: \"jsx\",\r\n\t\t\t\t\tcontents: data,\r\n\t\t\t\t\tresolveDir: new URL(\"./\", request.responseURL).pathname\r\n\t\t\t\t};\r\n\t\t\t\tawait fileCache.setItem(args.path, result);\r\n\t\t\t\treturn result;\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n};\r\n"]},"metadata":{},"sourceType":"module"}