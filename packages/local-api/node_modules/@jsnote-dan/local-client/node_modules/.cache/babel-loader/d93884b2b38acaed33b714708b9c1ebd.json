{"ast":null,"code":"import\"./code-editor.css\";import{useRef}from\"react\";import Editor from\"@monaco-editor/react\";import prettier from\"prettier\";import parser from\"prettier/parser-babel\";import{Button,Icon}from\"semantic-ui-react\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var CodeEditor=function CodeEditor(_ref){var initialValue=_ref.initialValue,onChange=_ref.onChange;var editorRef=useRef(null);var onEditorMount=function onEditorMount(editor,monaco){editorRef.current=editor;editor.onDidChangeModelContent(function(){onChange(editor.getValue());});};var onFormatClick=function onFormatClick(){// get current value from editor instance\nvar unformatted=editorRef.current.getValue();// format that value\nvar formatted=prettier.format(unformatted,{parser:\"babel\",plugins:[parser],useTabs:true,semi:true})// remove new line added by prettier\n.replace(/\\n$/,\"\");// set formatted value back into the editor\neditorRef.current.setValue(formatted);};return/*#__PURE__*/_jsxs(\"div\",{className:\"editor-wrapper\",children:[/*#__PURE__*/_jsxs(Button,{icon:true,animated:\"fade\",labelPosition:\"right\",className:\"button-format\",onClick:onFormatClick,children:[/*#__PURE__*/_jsx(Button.Content,{visible:true,className:\"text-center\",children:/*#__PURE__*/_jsx(Icon,{name:\"paint brush\"})}),/*#__PURE__*/_jsx(Button.Content,{hidden:true,children:\"Format\"})]}),/*#__PURE__*/_jsx(Editor,{onMount:onEditorMount,value:initialValue,theme:\"vs-dark\",language:\"javascript\",height:\"100%\",options:{wordWrap:\"on\",minimap:{enabled:false},showUnused:false,folding:false,lineNumbersMinChars:3,fontSize:16,scrollBeyondLastLine:false,automaticLayout:true}})]});};export default CodeEditor;","map":{"version":3,"sources":["C:/Users/Ryzen/Desktop/jbook/packages/local-client/src/components/code-editor.tsx"],"names":["useRef","Editor","prettier","parser","Button","Icon","CodeEditor","initialValue","onChange","editorRef","onEditorMount","editor","monaco","current","onDidChangeModelContent","getValue","onFormatClick","unformatted","formatted","format","plugins","useTabs","semi","replace","setValue","wordWrap","minimap","enabled","showUnused","folding","lineNumbersMinChars","fontSize","scrollBeyondLastLine","automaticLayout"],"mappings":"AAAA,MAAO,mBAAP,CACA,OAASA,MAAT,KAAuB,OAAvB,CACA,MAAOC,CAAAA,MAAP,KAAgC,sBAAhC,CACA,MAAOC,CAAAA,QAAP,KAAqB,UAArB,CACA,MAAOC,CAAAA,MAAP,KAAmB,uBAAnB,CACA,OAASC,MAAT,CAAiBC,IAAjB,KAA6B,mBAA7B,C,wFAOA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,MAA6C,IAA1CC,CAAAA,YAA0C,MAA1CA,YAA0C,CAA5BC,QAA4B,MAA5BA,QAA4B,CAC/D,GAAMC,CAAAA,SAAS,CAAGT,MAAM,CAAM,IAAN,CAAxB,CAEA,GAAMU,CAAAA,aAAsB,CAAG,QAAzBA,CAAAA,aAAyB,CAACC,MAAD,CAASC,MAAT,CAAoB,CAClDH,SAAS,CAACI,OAAV,CAAoBF,MAApB,CACAA,MAAM,CAACG,uBAAP,CAA+B,UAAM,CACpCN,QAAQ,CAACG,MAAM,CAACI,QAAP,EAAD,CAAR,CACA,CAFD,EAGA,CALD,CAOA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAM,CAC3B;AACA,GAAMC,CAAAA,WAAW,CAAGR,SAAS,CAACI,OAAV,CAAkBE,QAAlB,EAApB,CACA;AACA,GAAMG,CAAAA,SAAS,CAAGhB,QAAQ,CACxBiB,MADgB,CACTF,WADS,CACI,CACpBd,MAAM,CAAE,OADY,CAEpBiB,OAAO,CAAE,CAAEjB,MAAF,CAFW,CAGpBkB,OAAO,CAAE,IAHW,CAIpBC,IAAI,CAAE,IAJc,CADJ,CAOjB;AAPiB,CAQhBC,OARgB,CAQR,KARQ,CAQD,EARC,CAAlB,CASA;AACAd,SAAS,CAACI,OAAV,CAAkBW,QAAlB,CAA2BN,SAA3B,EACA,CAfD,CAiBA,mBACC,aAAK,SAAS,CAAC,gBAAf,wBACC,MAAC,MAAD,EAAQ,IAAI,KAAZ,CAAa,QAAQ,CAAC,MAAtB,CAA6B,aAAa,CAAC,OAA3C,CAAmD,SAAS,CAAC,eAA7D,CAA6E,OAAO,CAAEF,aAAtF,wBACC,KAAC,MAAD,CAAQ,OAAR,EAAgB,OAAO,KAAvB,CAAwB,SAAS,CAAC,aAAlC,uBACC,KAAC,IAAD,EAAM,IAAI,CAAC,aAAX,EADD,EADD,cAIC,KAAC,MAAD,CAAQ,OAAR,EAAgB,MAAM,KAAtB,oBAJD,GADD,cAOC,KAAC,MAAD,EACC,OAAO,CAAEN,aADV,CAEC,KAAK,CAAEH,YAFR,CAGC,KAAK,CAAC,SAHP,CAIC,QAAQ,CAAC,YAJV,CAKC,MAAM,CAAC,MALR,CAMC,OAAO,CAAE,CACRkB,QAAQ,CAAE,IADF,CAERC,OAAO,CACN,CACCC,OAAO,CAAE,KADV,CAHO,CAMRC,UAAU,CAAE,KANJ,CAORC,OAAO,CAAE,KAPD,CAQRC,mBAAmB,CAAE,CARb,CASRC,QAAQ,CAAE,EATF,CAURC,oBAAoB,CAAE,KAVd,CAWRC,eAAe,CAAE,IAXT,CANV,EAPD,GADD,CA8BA,CAzDD,CA2DA,cAAe3B,CAAAA,UAAf","sourcesContent":["import \"./code-editor.css\";\r\nimport { useRef } from \"react\";\r\nimport Editor, { OnMount } from \"@monaco-editor/react\";\r\nimport prettier from \"prettier\";\r\nimport parser from \"prettier/parser-babel\";\r\nimport { Button, Icon } from \"semantic-ui-react\";\r\n\r\ninterface EditorProps {\r\n\tinitialValue: string;\r\n\tonChange(value: string): void;\r\n}\r\n\r\nconst CodeEditor = ({ initialValue, onChange }: EditorProps) => {\r\n\tconst editorRef = useRef<any>(null);\r\n\r\n\tconst onEditorMount: OnMount = (editor, monaco) => {\r\n\t\teditorRef.current = editor;\r\n\t\teditor.onDidChangeModelContent(() => {\r\n\t\t\tonChange(editor.getValue());\r\n\t\t});\r\n\t};\r\n\r\n\tconst onFormatClick = () => {\r\n\t\t// get current value from editor instance\r\n\t\tconst unformatted = editorRef.current.getValue();\r\n\t\t// format that value\r\n\t\tconst formatted = prettier\r\n\t\t\t.format(unformatted, {\r\n\t\t\t\tparser: \"babel\",\r\n\t\t\t\tplugins: [ parser ],\r\n\t\t\t\tuseTabs: true,\r\n\t\t\t\tsemi: true\r\n\t\t\t})\r\n\t\t\t// remove new line added by prettier\r\n\t\t\t.replace(/\\n$/, \"\");\r\n\t\t// set formatted value back into the editor\r\n\t\teditorRef.current.setValue(formatted);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"editor-wrapper\">\r\n\t\t\t<Button icon animated=\"fade\" labelPosition=\"right\" className=\"button-format\" onClick={onFormatClick}>\r\n\t\t\t\t<Button.Content visible className=\"text-center\">\r\n\t\t\t\t\t<Icon name=\"paint brush\" />\r\n\t\t\t\t</Button.Content>\r\n\t\t\t\t<Button.Content hidden>Format</Button.Content>\r\n\t\t\t</Button>\r\n\t\t\t<Editor\r\n\t\t\t\tonMount={onEditorMount}\r\n\t\t\t\tvalue={initialValue}\r\n\t\t\t\ttheme=\"vs-dark\"\r\n\t\t\t\tlanguage=\"javascript\"\r\n\t\t\t\theight=\"100%\"\r\n\t\t\t\toptions={{\r\n\t\t\t\t\twordWrap: \"on\",\r\n\t\t\t\t\tminimap:\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tenabled: false\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\tshowUnused: false,\r\n\t\t\t\t\tfolding: false,\r\n\t\t\t\t\tlineNumbersMinChars: 3,\r\n\t\t\t\t\tfontSize: 16,\r\n\t\t\t\t\tscrollBeyondLastLine: false,\r\n\t\t\t\t\tautomaticLayout: true\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default CodeEditor;\r\n"]},"metadata":{},"sourceType":"module"}