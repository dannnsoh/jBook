{"ast":null,"code":"import _slicedToArray from\"C:/Users/Ryzen/Desktop/jbook/packages/local-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import\"./text-editor.css\";import{useState,useEffect,useRef}from\"react\";import MDEditor from\"@uiw/react-md-editor\";import{Segment}from\"semantic-ui-react\";import{useActions}from\"../hooks/use-actions\";import{jsx as _jsx}from\"react/jsx-runtime\";var TextEditor=function TextEditor(_ref){var cell=_ref.cell;var ref=useRef(null);var _useState=useState(false),_useState2=_slicedToArray(_useState,2),editing=_useState2[0],setEditing=_useState2[1];var _useActions=useActions(),updateCell=_useActions.updateCell;useEffect(function(){var listener=function listener(event){if(ref.current&&event.target&&ref.current.contains(event.target)){return;}setEditing(false);};document.addEventListener(\"click\",listener,{capture:true});return function(){document.removeEventListener(\"click\",listener,{capture:true});};},[]);if(editing){return/*#__PURE__*/_jsx(\"div\",{className:\"text-editor\",ref:ref,children:/*#__PURE__*/_jsx(MDEditor,{value:cell.content,onChange:function onChange(value){return updateCell(cell.id,value||\"\");},autoFocus:true})});}return/*#__PURE__*/_jsx(Segment,{className:\"text-editor\",onClick:function onClick(){return setEditing(true);},children:/*#__PURE__*/_jsx(\"div\",{className:\"card-content\",children:/*#__PURE__*/_jsx(MDEditor.Markdown,{source:cell.content||\"*Click to edit*\"})})});};export default TextEditor;","map":{"version":3,"sources":["C:/Users/Ryzen/Desktop/jbook/packages/local-client/src/components/text-editor.tsx"],"names":["useState","useEffect","useRef","MDEditor","Segment","useActions","TextEditor","cell","ref","editing","setEditing","updateCell","listener","event","current","target","contains","document","addEventListener","capture","removeEventListener","content","value","id"],"mappings":"yKAAA,MAAO,mBAAP,CACA,OAASA,QAAT,CAAmBC,SAAnB,CAA8BC,MAA9B,KAA4C,OAA5C,CACA,MAAOC,CAAAA,QAAP,KAAqB,sBAArB,CACA,OAASC,OAAT,KAAwB,mBAAxB,CAEA,OAASC,UAAT,KAA2B,sBAA3B,C,2CAMA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,MAA+B,IAA5BC,CAAAA,IAA4B,MAA5BA,IAA4B,CACjD,GAAMC,CAAAA,GAAG,CAAGN,MAAM,CAAwB,IAAxB,CAAlB,CACA,cAAgCF,QAAQ,CAAC,KAAD,CAAxC,wCAAQS,OAAR,eAAiBC,UAAjB,eACA,gBAAuBL,UAAU,EAAjC,CAAQM,UAAR,aAAQA,UAAR,CAEAV,SAAS,CAAC,UAAM,CACf,GAAMW,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,KAAD,CAAuB,CACvC,GAAIL,GAAG,CAACM,OAAJ,EAAeD,KAAK,CAACE,MAArB,EAA+BP,GAAG,CAACM,OAAJ,CAAYE,QAAZ,CAAqBH,KAAK,CAACE,MAA3B,CAAnC,CAA+E,CAC9E,OACA,CACDL,UAAU,CAAC,KAAD,CAAV,CACA,CALD,CAMAO,QAAQ,CAACC,gBAAT,CAA0B,OAA1B,CAAmCN,QAAnC,CAA6C,CAAEO,OAAO,CAAE,IAAX,CAA7C,EACA,MAAO,WAAM,CACZF,QAAQ,CAACG,mBAAT,CAA6B,OAA7B,CAAsCR,QAAtC,CAAgD,CAAEO,OAAO,CAAE,IAAX,CAAhD,EACA,CAFD,CAGA,CAXQ,CAWN,EAXM,CAAT,CAaA,GAAIV,OAAJ,CAAa,CACZ,mBACC,YAAK,SAAS,CAAC,aAAf,CAA6B,GAAG,CAAED,GAAlC,uBACC,KAAC,QAAD,EAAU,KAAK,CAAED,IAAI,CAACc,OAAtB,CAA+B,QAAQ,CAAE,kBAACC,KAAD,QAAWX,CAAAA,UAAU,CAACJ,IAAI,CAACgB,EAAN,CAAUD,KAAK,EAAI,EAAnB,CAArB,EAAzC,CAAsF,SAAS,KAA/F,EADD,EADD,CAKA,CAED,mBACC,KAAC,OAAD,EAAS,SAAS,CAAC,aAAnB,CAAiC,OAAO,CAAE,yBAAMZ,CAAAA,UAAU,CAAC,IAAD,CAAhB,EAA1C,uBACC,YAAK,SAAS,CAAC,cAAf,uBACC,KAAC,QAAD,CAAU,QAAV,EAAmB,MAAM,CAAEH,IAAI,CAACc,OAAL,EAAgB,iBAA3C,EADD,EADD,EADD,CAOA,CAjCD,CAmCA,cAAef,CAAAA,UAAf","sourcesContent":["import \"./text-editor.css\";\r\nimport { useState, useEffect, useRef } from \"react\";\r\nimport MDEditor from \"@uiw/react-md-editor\";\r\nimport { Segment } from \"semantic-ui-react\";\r\nimport { Cell } from \"../state\";\r\nimport { useActions } from \"../hooks/use-actions\";\r\n\r\ninterface TextEditorProps {\r\n\tcell: Cell;\r\n}\r\n\r\nconst TextEditor = ({ cell }: TextEditorProps) => {\r\n\tconst ref = useRef<HTMLDivElement | null>(null);\r\n\tconst [ editing, setEditing ] = useState(false);\r\n\tconst { updateCell } = useActions();\r\n\r\n\tuseEffect(() => {\r\n\t\tconst listener = (event: MouseEvent) => {\r\n\t\t\tif (ref.current && event.target && ref.current.contains(event.target as Node)) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tsetEditing(false);\r\n\t\t};\r\n\t\tdocument.addEventListener(\"click\", listener, { capture: true });\r\n\t\treturn () => {\r\n\t\t\tdocument.removeEventListener(\"click\", listener, { capture: true });\r\n\t\t};\r\n\t}, []);\r\n\r\n\tif (editing) {\r\n\t\treturn (\r\n\t\t\t<div className=\"text-editor\" ref={ref}>\r\n\t\t\t\t<MDEditor value={cell.content} onChange={(value) => updateCell(cell.id, value || \"\")} autoFocus />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Segment className=\"text-editor\" onClick={() => setEditing(true)}>\r\n\t\t\t<div className=\"card-content\">\r\n\t\t\t\t<MDEditor.Markdown source={cell.content || \"*Click to edit*\"} />\r\n\t\t\t</div>\r\n\t\t</Segment>\r\n\t);\r\n};\r\n\r\nexport default TextEditor;\r\n"]},"metadata":{},"sourceType":"module"}