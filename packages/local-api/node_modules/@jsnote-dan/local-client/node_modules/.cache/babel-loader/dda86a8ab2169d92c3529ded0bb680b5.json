{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport React, { useContext, useMemo } from 'react';\nimport \"./Child.css\";\nimport Toolbar from './';\nimport { EditorContext } from '../../Context';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function Child(props) {\n  var {\n    prefixCls,\n    groupName,\n    commands,\n    children\n  } = props || {};\n  var {\n    barPopup = {}\n  } = useContext(EditorContext);\n  return useMemo(() => /*#__PURE__*/_jsx(\"div\", {\n    className: prefixCls + \"-toolbar-child \" + (groupName && barPopup[groupName] ? 'active' : ''),\n    onClick: e => e.stopPropagation(),\n    children: Array.isArray(commands) ? /*#__PURE__*/_jsx(Toolbar, _extends({\n      commands: commands\n    }, props, {\n      height: \"\",\n      isChild: true\n    })) : children\n  }), // eslint-disable-next-line react-hooks/exhaustive-deps\n  [commands, barPopup, groupName, prefixCls]);\n}","map":{"version":3,"sources":["../../../src/components/Toolbar/Child.tsx"],"names":["children","props","barPopup","useContext","useMemo","prefixCls","groupName","e","commands"],"mappings":";AAAA,OAAA,KAAA,IAAA,UAAA,EAAA,OAAA,QAAA,OAAA;AACA,OAAA,aAAA;AACA,OAAA,OAAA,MAAA,IAAA;AACA,SAAA,aAAA,QAAA,eAAA;;AAOA,eAAe,SAAA,KAAA,CAAA,KAAA,EAAkC;AAC/C,MAAM;AAAA,IAAA,SAAA;AAAA,IAAA,SAAA;AAAA,IAAA,QAAA;AAAkCA,IAAAA;AAAlC,MAA+CC,KAAK,IAA1D,EAAA;AACA,MAAM;AAAEC,IAAAA,QAAQ,GAAG;AAAb,MAAoBC,UAAU,CAApC,aAAoC,CAApC;AACA,SAAOC,OAAO,CACZ,MAAA,aACE,IAAA,CAAA,KAAA,EAAA;AACE,IAAA,SAAS,EAAKC,SAAL,GAAA,iBAAKA,IAA2BC,SAAS,IAAIJ,QAAQ,CAArBI,SAAqB,CAArBA,GAAAA,QAAAA,GAD3C,EACgBD,CADhB;AAEE,IAAA,OAAO,EAAGE,CAAD,IAAOA,CAAC,CAFnB,eAEkBA,EAFlB;AAAA,IAAA,QAAA,EAIG,KAAK,CAAL,OAAA,CAAA,QAAA,IAAA,aAA0B,IAAA,CAAA,OAAA,EAAA,QAAA,CAAA;AAAS,MAAA,QAAQ,EAAEC;AAAnB,KAAA,EAAA,KAAA,EAAA;AAAwC,MAAA,MAAM,EAA9C,EAAA;AAAkD,MAAA,OAAO,EAAA;AAAzD,KAAA,CAAA,CAA1B,GAAyFR;AAJ5F,GAAA,CAFU,EASZ;AACA,GAAA,QAAA,EAAA,QAAA,EAAA,SAAA,EAVF,SAUE,CAVY,CAAd;AAYD","sourcesContent":["import React, { useContext, useMemo } from 'react';\nimport './Child.less';\nimport Toolbar, { IToolbarProps } from './';\nimport { EditorContext } from '../../Context';\n\nexport type ChildProps = IToolbarProps & {\n  children?: JSX.Element;\n  groupName?: string;\n};\n\nexport default function Child(props: ChildProps) {\n  const { prefixCls, groupName, commands, children } = props || {};\n  const { barPopup = {} } = useContext(EditorContext);\n  return useMemo(\n    () => (\n      <div\n        className={`${prefixCls}-toolbar-child ${groupName && barPopup[groupName] ? 'active' : ''}`}\n        onClick={(e) => e.stopPropagation()}\n      >\n        {Array.isArray(commands) ? <Toolbar commands={commands} {...props} height=\"\" isChild /> : children}\n      </div>\n    ),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [commands, barPopup, groupName, prefixCls],\n  );\n}\n"]},"metadata":{},"sourceType":"module"}