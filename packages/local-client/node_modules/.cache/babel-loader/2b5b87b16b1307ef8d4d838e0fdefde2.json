{"ast":null,"code":"import\"./action-bar.css\";import{useActions}from\"../hooks/use-actions\";import{Button}from\"semantic-ui-react\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ActionBar=function ActionBar(_ref){var id=_ref.id;var _useActions=useActions(),moveCell=_useActions.moveCell,deleteCell=_useActions.deleteCell;return/*#__PURE__*/_jsxs(Button.Group,{className:\"action-bar\",children:[/*#__PURE__*/_jsx(Button,{className:\"action-bar-button\",icon:\"arrow up\",onClick:function onClick(){return moveCell(id,\"up\");}}),/*#__PURE__*/_jsx(Button,{className:\"action-bar-button\",icon:\"arrow down\",onClick:function onClick(){return moveCell(id,\"down\");}}),/*#__PURE__*/_jsx(Button,{className:\"action-bar-button\",icon:\"trash alternate\",onClick:function onClick(){return deleteCell(id);}})]});};export default ActionBar;","map":{"version":3,"sources":["C:/Users/Ryzen/Desktop/jbook/packages/local-client/src/components/action-bar.tsx"],"names":["useActions","Button","ActionBar","id","moveCell","deleteCell"],"mappings":"AAAA,MAAO,kBAAP,CACA,OAASA,UAAT,KAA2B,sBAA3B,CACA,OAASC,MAAT,KAAuB,mBAAvB,C,wFAMA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,MAA4B,IAAzBC,CAAAA,EAAyB,MAAzBA,EAAyB,CAC7C,gBAAiCH,UAAU,EAA3C,CAAQI,QAAR,aAAQA,QAAR,CAAkBC,UAAlB,aAAkBA,UAAlB,CAEA,mBACC,MAAC,MAAD,CAAQ,KAAR,EAAc,SAAS,CAAC,YAAxB,wBACC,KAAC,MAAD,EAAQ,SAAS,CAAC,mBAAlB,CAAsC,IAAI,CAAC,UAA3C,CAAsD,OAAO,CAAE,yBAAMD,CAAAA,QAAQ,CAACD,EAAD,CAAK,IAAL,CAAd,EAA/D,EADD,cAEC,KAAC,MAAD,EAAQ,SAAS,CAAC,mBAAlB,CAAsC,IAAI,CAAC,YAA3C,CAAwD,OAAO,CAAE,yBAAMC,CAAAA,QAAQ,CAACD,EAAD,CAAK,MAAL,CAAd,EAAjE,EAFD,cAGC,KAAC,MAAD,EAAQ,SAAS,CAAC,mBAAlB,CAAsC,IAAI,CAAC,iBAA3C,CAA6D,OAAO,CAAE,yBAAME,CAAAA,UAAU,CAACF,EAAD,CAAhB,EAAtE,EAHD,GADD,CAOA,CAVD,CAYA,cAAeD,CAAAA,SAAf","sourcesContent":["import \"./action-bar.css\";\r\nimport { useActions } from \"../hooks/use-actions\";\r\nimport { Button } from \"semantic-ui-react\";\r\n\r\ninterface ActionBarProps {\r\n\tid: string;\r\n}\r\n\r\nconst ActionBar = ({ id }: ActionBarProps) => {\r\n\tconst { moveCell, deleteCell } = useActions();\r\n\r\n\treturn (\r\n\t\t<Button.Group className=\"action-bar\">\r\n\t\t\t<Button className=\"action-bar-button\" icon=\"arrow up\" onClick={() => moveCell(id, \"up\")} />\r\n\t\t\t<Button className=\"action-bar-button\" icon=\"arrow down\" onClick={() => moveCell(id, \"down\")} />\r\n\t\t\t<Button className=\"action-bar-button\" icon=\"trash alternate\" onClick={() => deleteCell(id)} />\r\n\t\t</Button.Group>\r\n\t);\r\n};\r\n\r\nexport default ActionBar;\r\n"]},"metadata":{},"sourceType":"module"}