{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ryzen\\\\Desktop\\\\jbook\\\\src\\\\components\\\\resizable.tsx\",\n    _s = $RefreshSig$();\n\nimport \"./resizable.css\";\nimport { useState, useEffect } from \"react\";\nimport { ResizableBox } from \"react-resizable\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Resizable = _ref => {\n  _s();\n\n  let {\n    direction,\n    children\n  } = _ref;\n  const [innerWidth, setInnerWidth] = useState(window.innerWidth);\n  const [innerHeight, setInnerHeight] = useState(window.innerHeight);\n  const [horizontalWidth, setHorizontalWidth] = useState(innerWidth * 0.75);\n  let resizableAttr;\n\n  const newHorizontalWidth = newWidth => {\n    setHorizontalWidth(newWidth);\n  };\n\n  useEffect(() => {\n    // debounce\n    let timer;\n\n    const listener = () => {\n      if (timer) {\n        clearTimeout(timer);\n      }\n\n      timer = setTimeout(() => {\n        // update states with current window width and height\n        setInnerWidth(window.innerWidth);\n        setInnerHeight(window.innerHeight);\n      }, 100);\n    };\n\n    window.addEventListener(\"resize\", listener); // cleanup\n\n    return () => {\n      window.removeEventListener(\"resize\", listener);\n    };\n  }, []);\n\n  if (direction === \"horizontal\") {\n    resizableAttr = {\n      className: \"resize-horizontal\",\n      width: horizontalWidth,\n      height: Infinity,\n      resizeHandles: [\"e\"],\n      maxConstraints: [innerWidth * 0.75, Infinity],\n      minConstraints: [innerWidth * 0.2, Infinity]\n    };\n  } else {\n    resizableAttr = {\n      width: Infinity,\n      height: 400,\n      resizeHandles: [\"s\"],\n      maxConstraints: [Infinity, innerHeight * 0.9],\n      minConstraints: [Infinity, 100]\n    };\n  }\n\n  return /*#__PURE__*/_jsxDEV(ResizableBox, { ...resizableAttr,\n    onResize: (event, data) => {\n      return newHorizontalWidth;\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Resizable, \"8HSSaxSSuVjCs5OqqZD3m6eHG+w=\");\n\n_c = Resizable;\nexport default Resizable;\n\nvar _c;\n\n$RefreshReg$(_c, \"Resizable\");","map":{"version":3,"sources":["C:/Users/Ryzen/Desktop/jbook/src/components/resizable.tsx"],"names":["useState","useEffect","ResizableBox","Resizable","direction","children","innerWidth","setInnerWidth","window","innerHeight","setInnerHeight","horizontalWidth","setHorizontalWidth","resizableAttr","newHorizontalWidth","newWidth","timer","listener","clearTimeout","setTimeout","addEventListener","removeEventListener","className","width","height","Infinity","resizeHandles","maxConstraints","minConstraints","event","data"],"mappings":";;;AAAA,OAAO,iBAAP;AACA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,YAAT,QAAgD,iBAAhD;;;AAOA,MAAMC,SAAS,GAAG,QAA6C;AAAA;;AAAA,MAA5C;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,GAA4C;AAC9D,QAAM,CAAEC,UAAF,EAAcC,aAAd,IAAgCP,QAAQ,CAACQ,MAAM,CAACF,UAAR,CAA9C;AACA,QAAM,CAAEG,WAAF,EAAeC,cAAf,IAAkCV,QAAQ,CAACQ,MAAM,CAACC,WAAR,CAAhD;AACA,QAAM,CAAEE,eAAF,EAAmBC,kBAAnB,IAA0CZ,QAAQ,CAACM,UAAU,GAAG,IAAd,CAAxD;AACA,MAAIO,aAAJ;;AAEA,QAAMC,kBAAkB,GAAIC,QAAD,IAAsB;AAChDH,IAAAA,kBAAkB,CAACG,QAAD,CAAlB;AACA,GAFD;;AAIAd,EAAAA,SAAS,CAAC,MAAM;AACf;AACA,QAAIe,KAAJ;;AACA,UAAMC,QAAQ,GAAG,MAAM;AACtB,UAAID,KAAJ,EAAW;AACVE,QAAAA,YAAY,CAACF,KAAD,CAAZ;AACA;;AACDA,MAAAA,KAAK,GAAGG,UAAU,CAAC,MAAM;AACxB;AACAZ,QAAAA,aAAa,CAACC,MAAM,CAACF,UAAR,CAAb;AACAI,QAAAA,cAAc,CAACF,MAAM,CAACC,WAAR,CAAd;AACA,OAJiB,EAIf,GAJe,CAAlB;AAKA,KATD;;AAUAD,IAAAA,MAAM,CAACY,gBAAP,CAAwB,QAAxB,EAAkCH,QAAlC,EAbe,CAcf;;AACA,WAAO,MAAM;AACZT,MAAAA,MAAM,CAACa,mBAAP,CAA2B,QAA3B,EAAqCJ,QAArC;AACA,KAFD;AAGA,GAlBQ,EAkBN,EAlBM,CAAT;;AAoBA,MAAIb,SAAS,KAAK,YAAlB,EAAgC;AAC/BS,IAAAA,aAAa,GAAG;AACfS,MAAAA,SAAS,EAAE,mBADI;AAEfC,MAAAA,KAAK,EAAEZ,eAFQ;AAGfa,MAAAA,MAAM,EAAEC,QAHO;AAIfC,MAAAA,aAAa,EAAE,CAAE,GAAF,CAJA;AAKfC,MAAAA,cAAc,EAAE,CAAErB,UAAU,GAAG,IAAf,EAAqBmB,QAArB,CALD;AAMfG,MAAAA,cAAc,EAAE,CAAEtB,UAAU,GAAG,GAAf,EAAoBmB,QAApB;AAND,KAAhB;AAQA,GATD,MASO;AACNZ,IAAAA,aAAa,GAAG;AACfU,MAAAA,KAAK,EAAEE,QADQ;AAEfD,MAAAA,MAAM,EAAE,GAFO;AAGfE,MAAAA,aAAa,EAAE,CAAE,GAAF,CAHA;AAIfC,MAAAA,cAAc,EAAE,CAAEF,QAAF,EAAYhB,WAAW,GAAG,GAA1B,CAJD;AAKfmB,MAAAA,cAAc,EAAE,CAAEH,QAAF,EAAY,GAAZ;AALD,KAAhB;AAOA;;AAED,sBACC,QAAC,YAAD,OACKZ,aADL;AAEC,IAAA,QAAQ,EAAE,CAACgB,KAAD,EAAQC,IAAR,KAAiB;AAC1B,aAAOhB,kBAAP;AACA,KAJF;AAAA,cAMET;AANF;AAAA;AAAA;AAAA;AAAA,UADD;AAUA,CA3DD;;GAAMF,S;;KAAAA,S;AA6DN,eAAeA,SAAf","sourcesContent":["import \"./resizable.css\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { ResizableBox, ResizableBoxProps } from \"react-resizable\";\r\n\r\ninterface ResizableProps {\r\n\tdirection: \"horizontal\" | \"vertical\";\r\n\tchildren: React.ReactNode;\r\n}\r\n\r\nconst Resizable = ({ direction, children }: ResizableProps) => {\r\n\tconst [ innerWidth, setInnerWidth ] = useState(window.innerWidth);\r\n\tconst [ innerHeight, setInnerHeight ] = useState(window.innerHeight);\r\n\tconst [ horizontalWidth, setHorizontalWidth ] = useState(innerWidth * 0.75);\r\n\tlet resizableAttr: ResizableBoxProps;\r\n\r\n\tconst newHorizontalWidth = (newWidth: number) => {\r\n\t\tsetHorizontalWidth(newWidth);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\t// debounce\r\n\t\tlet timer: any;\r\n\t\tconst listener = () => {\r\n\t\t\tif (timer) {\r\n\t\t\t\tclearTimeout(timer);\r\n\t\t\t}\r\n\t\t\ttimer = setTimeout(() => {\r\n\t\t\t\t// update states with current window width and height\r\n\t\t\t\tsetInnerWidth(window.innerWidth);\r\n\t\t\t\tsetInnerHeight(window.innerHeight);\r\n\t\t\t}, 100);\r\n\t\t};\r\n\t\twindow.addEventListener(\"resize\", listener);\r\n\t\t// cleanup\r\n\t\treturn () => {\r\n\t\t\twindow.removeEventListener(\"resize\", listener);\r\n\t\t};\r\n\t}, []);\r\n\r\n\tif (direction === \"horizontal\") {\r\n\t\tresizableAttr = {\r\n\t\t\tclassName: \"resize-horizontal\",\r\n\t\t\twidth: horizontalWidth,\r\n\t\t\theight: Infinity,\r\n\t\t\tresizeHandles: [ \"e\" ],\r\n\t\t\tmaxConstraints: [ innerWidth * 0.75, Infinity ],\r\n\t\t\tminConstraints: [ innerWidth * 0.2, Infinity ]\r\n\t\t};\r\n\t} else {\r\n\t\tresizableAttr = {\r\n\t\t\twidth: Infinity,\r\n\t\t\theight: 400,\r\n\t\t\tresizeHandles: [ \"s\" ],\r\n\t\t\tmaxConstraints: [ Infinity, innerHeight * 0.9 ],\r\n\t\t\tminConstraints: [ Infinity, 100 ]\r\n\t\t};\r\n\t}\r\n\r\n\treturn (\r\n\t\t<ResizableBox\r\n\t\t\t{...resizableAttr}\r\n\t\t\tonResize={(event, data) => {\r\n\t\t\t\treturn newHorizontalWidth;\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t{children}\r\n\t\t</ResizableBox>\r\n\t);\r\n};\r\n\r\nexport default Resizable;\r\n"]},"metadata":{},"sourceType":"module"}