{"ast":null,"code":"import * as esbuild from \"esbuild-wasm\";\nimport { unpkgPathPlugin } from \"./plugins/unpkg-path-plugin\";\nimport { fetchPlugin } from \"./plugins/fetch-plugin\";\n\nconst bundle = async rawCode => {\n  try {\n    const result = await esbuild.build({\n      entryPoints: [\"index.js\"],\n      bundle: true,\n      write: false,\n      plugins: [unpkgPathPlugin(), fetchPlugin(rawCode)],\n      define: {\n        \"process.env.NODE_ENV\": '\"production\"',\n        global: \"window\"\n      }\n    });\n    return {\n      code: result.outputFiles[0].text,\n      err: \"\"\n    };\n  } catch (error) {\n    if (error instanceof Error && error.message.includes(\"initialize\")) {\n      console.log(error.message);\n      esbuild.initialize({\n        worker: true,\n        wasmURL: \"https://unpkg.com/esbuild-wasm/esbuild.wasm\"\n      }).build({\n        entryPoints: [\"index.js\"],\n        bundle: true,\n        write: false,\n        plugins: [unpkgPathPlugin(), fetchPlugin(rawCode)],\n        define: {\n          \"process.env.NODE_ENV\": '\"production\"',\n          global: \"window\"\n        }\n      });\n      return {\n        code: result.outputFiles[0].text,\n        err: \"\"\n      };\n    } else {\n      throw error;\n    }\n  } // try {\n  // \tconst result = await esbuild.build({\n  // \t\tentryPoints: [ \"index.js\" ],\n  // \t\tbundle: true,\n  // \t\twrite: false,\n  // \t\tplugins: [ unpkgPathPlugin(), fetchPlugin(rawCode) ],\n  // \t\tdefine:\n  // \t\t\t{\n  // \t\t\t\t\"process.env.NODE_ENV\": '\"production\"',\n  // \t\t\t\tglobal: \"window\"\n  // \t\t\t}\n  // \t});\n  // \treturn {\n  // \t\tcode: result.outputFiles[0].text,\n  // \t\terr: \"\"\n  // \t};\n  // } catch (err) {\n  // \tif (err instanceof Error) {\n  // \t\treturn {\n  // \t\t\tcode: \"\",\n  // \t\t\terr: err.message\n  // \t\t};\n  // \t} else {\n  // \t\tconsole.log(\"Error occurred!\");\n  // \t}\n  // }\n\n}; // let service: boolean = false;\n// const bundle = async (rawCode: string) => {\n// \tif (!service) {\n// \t\t// initialize esbuild\n// \t\tawait esbuild.initialize({\n// \t\t\tworker: true,\n// \t\t\twasmURL: \"https://unpkg.com/esbuild-wasm/esbuild.wasm\"\n// \t\t});\n// \t\tservice = true;\n// \t} else {\n// \t\t// bundle code\n// \t\ttry {\n// \t\t\tconst result = await esbuild.build({\n// \t\t\t\tentryPoints: [ \"index.js\" ],\n// \t\t\t\tbundle: true,\n// \t\t\t\twrite: false,\n// \t\t\t\tplugins: [ unpkgPathPlugin(), fetchPlugin(rawCode) ],\n// \t\t\t\tdefine:\n// \t\t\t\t\t{\n// \t\t\t\t\t\t\"process.env.NODE_ENV\": '\"production\"',\n// \t\t\t\t\t\tglobal: \"window\"\n// \t\t\t\t\t}\n// \t\t\t});\n// \t\t\treturn {\n// \t\t\t\tcode: result.outputFiles[0].text,\n// \t\t\t\terr: \"\"\n// \t\t\t};\n// \t\t} catch (err) {\n// \t\t\tif (err instanceof Error) {\n// \t\t\t\treturn {\n// \t\t\t\t\tcode: \"\",\n// \t\t\t\t\terr: err.message\n// \t\t\t\t};\n// \t\t\t} else {\n// \t\t\t\tconsole.log(\"Error occurred!\");\n// \t\t\t}\n// \t\t}\n// \t}\n// };\n\n\nexport default bundle;","map":{"version":3,"sources":["C:/Users/Ryzen/Desktop/jbook/src/bundler/index.ts"],"names":["esbuild","unpkgPathPlugin","fetchPlugin","bundle","rawCode","result","build","entryPoints","write","plugins","define","global","code","outputFiles","text","err","error","Error","message","includes","console","log","initialize","worker","wasmURL"],"mappings":"AAAA,OAAO,KAAKA,OAAZ,MAAyB,cAAzB;AACA,SAASC,eAAT,QAAgC,6BAAhC;AACA,SAASC,WAAT,QAA4B,wBAA5B;;AAEA,MAAMC,MAAM,GAAG,MAAOC,OAAP,IAA2B;AACzC,MAAI;AACH,UAAMC,MAAM,GAAG,MAAML,OAAO,CAACM,KAAR,CAAc;AAClCC,MAAAA,WAAW,EAAE,CAAE,UAAF,CADqB;AAElCJ,MAAAA,MAAM,EAAE,IAF0B;AAGlCK,MAAAA,KAAK,EAAE,KAH2B;AAIlCC,MAAAA,OAAO,EAAE,CAAER,eAAe,EAAjB,EAAqBC,WAAW,CAACE,OAAD,CAAhC,CAJyB;AAKlCM,MAAAA,MAAM,EACL;AACC,gCAAwB,cADzB;AAECC,QAAAA,MAAM,EAAE;AAFT;AANiC,KAAd,CAArB;AAWA,WAAO;AACNC,MAAAA,IAAI,EAAEP,MAAM,CAACQ,WAAP,CAAmB,CAAnB,EAAsBC,IADtB;AAENC,MAAAA,GAAG,EAAE;AAFC,KAAP;AAIA,GAhBD,CAgBE,OAAOC,KAAP,EAAc;AACf,QAAIA,KAAK,YAAYC,KAAjB,IAA0BD,KAAK,CAACE,OAAN,CAAcC,QAAd,CAAuB,YAAvB,CAA9B,EAAoE;AACnEC,MAAAA,OAAO,CAACC,GAAR,CAAYL,KAAK,CAACE,OAAlB;AACAlB,MAAAA,OAAO,CACLsB,UADF,CACa;AACXC,QAAAA,MAAM,EAAE,IADG;AAEXC,QAAAA,OAAO,EAAE;AAFE,OADb,EAKElB,KALF,CAKQ;AACNC,QAAAA,WAAW,EAAE,CAAE,UAAF,CADP;AAENJ,QAAAA,MAAM,EAAE,IAFF;AAGNK,QAAAA,KAAK,EAAE,KAHD;AAINC,QAAAA,OAAO,EAAE,CAAER,eAAe,EAAjB,EAAqBC,WAAW,CAACE,OAAD,CAAhC,CAJH;AAKNM,QAAAA,MAAM,EACL;AACC,kCAAwB,cADzB;AAECC,UAAAA,MAAM,EAAE;AAFT;AANK,OALR;AAgBA,aAAO;AACNC,QAAAA,IAAI,EAAEP,MAAM,CAACQ,WAAP,CAAmB,CAAnB,EAAsBC,IADtB;AAENC,QAAAA,GAAG,EAAE;AAFC,OAAP;AAIA,KAtBD,MAsBO;AACN,YAAMC,KAAN;AACA;AACD,GA3CwC,CA6CzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,CAvED,C,CAwEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAeb,MAAf","sourcesContent":["import * as esbuild from \"esbuild-wasm\";\r\nimport { unpkgPathPlugin } from \"./plugins/unpkg-path-plugin\";\r\nimport { fetchPlugin } from \"./plugins/fetch-plugin\";\r\n\r\nconst bundle = async (rawCode: string) => {\r\n\ttry {\r\n\t\tconst result = await esbuild.build({\r\n\t\t\tentryPoints: [ \"index.js\" ],\r\n\t\t\tbundle: true,\r\n\t\t\twrite: false,\r\n\t\t\tplugins: [ unpkgPathPlugin(), fetchPlugin(rawCode) ],\r\n\t\t\tdefine:\r\n\t\t\t\t{\r\n\t\t\t\t\t\"process.env.NODE_ENV\": '\"production\"',\r\n\t\t\t\t\tglobal: \"window\"\r\n\t\t\t\t}\r\n\t\t});\r\n\t\treturn {\r\n\t\t\tcode: result.outputFiles[0].text,\r\n\t\t\terr: \"\"\r\n\t\t};\r\n\t} catch (error) {\r\n\t\tif (error instanceof Error && error.message.includes(\"initialize\")) {\r\n\t\t\tconsole.log(error.message);\r\n\t\t\tesbuild\r\n\t\t\t\t.initialize({\r\n\t\t\t\t\tworker: true,\r\n\t\t\t\t\twasmURL: \"https://unpkg.com/esbuild-wasm/esbuild.wasm\"\r\n\t\t\t\t})\r\n\t\t\t\t.build({\r\n\t\t\t\t\tentryPoints: [ \"index.js\" ],\r\n\t\t\t\t\tbundle: true,\r\n\t\t\t\t\twrite: false,\r\n\t\t\t\t\tplugins: [ unpkgPathPlugin(), fetchPlugin(rawCode) ],\r\n\t\t\t\t\tdefine:\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\"process.env.NODE_ENV\": '\"production\"',\r\n\t\t\t\t\t\t\tglobal: \"window\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\treturn {\r\n\t\t\t\tcode: result.outputFiles[0].text,\r\n\t\t\t\terr: \"\"\r\n\t\t\t};\r\n\t\t} else {\r\n\t\t\tthrow error;\r\n\t\t}\r\n\t}\r\n\r\n\t// try {\r\n\t// \tconst result = await esbuild.build({\r\n\t// \t\tentryPoints: [ \"index.js\" ],\r\n\t// \t\tbundle: true,\r\n\t// \t\twrite: false,\r\n\t// \t\tplugins: [ unpkgPathPlugin(), fetchPlugin(rawCode) ],\r\n\t// \t\tdefine:\r\n\t// \t\t\t{\r\n\t// \t\t\t\t\"process.env.NODE_ENV\": '\"production\"',\r\n\t// \t\t\t\tglobal: \"window\"\r\n\t// \t\t\t}\r\n\t// \t});\r\n\t// \treturn {\r\n\t// \t\tcode: result.outputFiles[0].text,\r\n\t// \t\terr: \"\"\r\n\t// \t};\r\n\t// } catch (err) {\r\n\t// \tif (err instanceof Error) {\r\n\t// \t\treturn {\r\n\t// \t\t\tcode: \"\",\r\n\t// \t\t\terr: err.message\r\n\t// \t\t};\r\n\t// \t} else {\r\n\t// \t\tconsole.log(\"Error occurred!\");\r\n\t// \t}\r\n\t// }\r\n};\r\n// let service: boolean = false;\r\n\r\n// const bundle = async (rawCode: string) => {\r\n// \tif (!service) {\r\n// \t\t// initialize esbuild\r\n// \t\tawait esbuild.initialize({\r\n// \t\t\tworker: true,\r\n// \t\t\twasmURL: \"https://unpkg.com/esbuild-wasm/esbuild.wasm\"\r\n// \t\t});\r\n// \t\tservice = true;\r\n// \t} else {\r\n// \t\t// bundle code\r\n// \t\ttry {\r\n// \t\t\tconst result = await esbuild.build({\r\n// \t\t\t\tentryPoints: [ \"index.js\" ],\r\n// \t\t\t\tbundle: true,\r\n// \t\t\t\twrite: false,\r\n// \t\t\t\tplugins: [ unpkgPathPlugin(), fetchPlugin(rawCode) ],\r\n// \t\t\t\tdefine:\r\n// \t\t\t\t\t{\r\n// \t\t\t\t\t\t\"process.env.NODE_ENV\": '\"production\"',\r\n// \t\t\t\t\t\tglobal: \"window\"\r\n// \t\t\t\t\t}\r\n// \t\t\t});\r\n// \t\t\treturn {\r\n// \t\t\t\tcode: result.outputFiles[0].text,\r\n// \t\t\t\terr: \"\"\r\n// \t\t\t};\r\n// \t\t} catch (err) {\r\n// \t\t\tif (err instanceof Error) {\r\n// \t\t\t\treturn {\r\n// \t\t\t\t\tcode: \"\",\r\n// \t\t\t\t\terr: err.message\r\n// \t\t\t\t};\r\n// \t\t\t} else {\r\n// \t\t\t\tconsole.log(\"Error occurred!\");\r\n// \t\t\t}\r\n// \t\t}\r\n// \t}\r\n// };\r\n\r\nexport default bundle;\r\n"]},"metadata":{},"sourceType":"module"}