{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ryzen\\\\Desktop\\\\jbook\\\\src\\\\components\\\\cell-list.tsx\",\n    _s = $RefreshSig$();\n\nimport { useTypedSelector } from \"../hooks/use-typed-selector\";\nimport CellListItem from \"./cell-list-item\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CellList = () => {\n  _s();\n\n  // extract state.cells.order and .data from store, map over each cell id in order array and return the corresponding cell from data\n  const cells = useTypedSelector(_ref => {\n    let {\n      cells: {\n        order,\n        data\n      }\n    } = _ref;\n    return order.map(id => data[id]);\n  });\n  const renderedCells = cells.map(cell => /*#__PURE__*/_jsxDEV(CellListItem, {\n    cell: cell\n  }, cell.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 44\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: renderedCells\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CellList, \"ij3ho+NMbIxaBKnXgl+evU0tiZI=\", false, function () {\n  return [useTypedSelector];\n});\n\n_c = CellList;\nexport default CellList;\n\nvar _c;\n\n$RefreshReg$(_c, \"CellList\");","map":{"version":3,"sources":["C:/Users/Ryzen/Desktop/jbook/src/components/cell-list.tsx"],"names":["useTypedSelector","CellListItem","CellList","cells","order","data","map","id","renderedCells","cell"],"mappings":";;;AAAA,SAASA,gBAAT,QAAiC,6BAAjC;AACA,OAAOC,YAAP,MAAyB,kBAAzB;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACtB;AACA,QAAMC,KAAK,GAAGH,gBAAgB,CAAC;AAAA,QAAC;AAAEG,MAAAA,KAAK,EAAE;AAAEC,QAAAA,KAAF;AAASC,QAAAA;AAAT;AAAT,KAAD;AAAA,WAAgCD,KAAK,CAACE,GAAN,CAAWC,EAAD,IAAQF,IAAI,CAACE,EAAD,CAAtB,CAAhC;AAAA,GAAD,CAA9B;AAEA,QAAMC,aAAa,GAAGL,KAAK,CAACG,GAAN,CAAWG,IAAD,iBAAU,QAAC,YAAD;AAA4B,IAAA,IAAI,EAAEA;AAAlC,KAAmBA,IAAI,CAACF,EAAxB;AAAA;AAAA;AAAA;AAAA,UAApB,CAAtB;AACA,sBAAO;AAAA,cAAMC;AAAN;AAAA;AAAA;AAAA;AAAA,UAAP;AACA,CAND;;GAAMN,Q;UAESF,gB;;;KAFTE,Q;AAQN,eAAeA,QAAf","sourcesContent":["import { useTypedSelector } from \"../hooks/use-typed-selector\";\r\nimport CellListItem from \"./cell-list-item\";\r\n\r\nconst CellList = () => {\r\n\t// extract state.cells.order and .data from store, map over each cell id in order array and return the corresponding cell from data\r\n\tconst cells = useTypedSelector(({ cells: { order, data } }) => order.map((id) => data[id]));\r\n\r\n\tconst renderedCells = cells.map((cell) => <CellListItem key={cell.id} cell={cell} />);\r\n\treturn <div>{renderedCells}</div>;\r\n};\r\n\r\nexport default CellList;\r\n"]},"metadata":{},"sourceType":"module"}