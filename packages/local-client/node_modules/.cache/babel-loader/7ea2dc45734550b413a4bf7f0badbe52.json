{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ryzen\\\\Desktop\\\\Udemy\\\\React and Typescript (Stephen Grider)\\\\jbook\\\\src\\\\components\\\\code-editor.tsx\",\n    _s = $RefreshSig$();\n\nimport { useRef } from \"react\";\nimport Editor from \"@monaco-editor/react\";\nimport prettier from \"prettier\";\nimport parser from \"prettier/parser-babel\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CodeEditor = _ref => {\n  _s();\n\n  let {\n    initialValue,\n    onChange\n  } = _ref;\n  const editorRef = useRef(null);\n\n  const onEditorMount = (editor, monaco) => {\n    editorRef.current = editor;\n    onChange(editor.getValue());\n  };\n\n  const onFormatClick = () => {\n    const unformatted = editorRef.current.getValue();\n    const formatted = prettier.format(unformatted, {\n      parser: \"babel\",\n      plugins: [parser],\n      useTabs: true,\n      semi: true,\n      singleQuote: true\n    });\n    editorRef.current.setValue(formatted);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onFormatClick,\n      children: \"Format\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Editor, {\n      onMount: onEditorMount,\n      value: initialValue,\n      theme: \"vs-dark\",\n      language: \"javascript\",\n      height: \"50vh\",\n      options: {\n        wordWrap: \"on\",\n        minimap: {\n          enabled: false\n        },\n        showUnused: false,\n        folding: false,\n        lineNumbersMinChars: 3,\n        fontSize: 16,\n        scrollBeyondLastLine: false,\n        automaticLayout: true\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 3\n  }, this);\n};\n\n_s(CodeEditor, \"U23Mj2fZUVBkuOSyNtK9IkK2H0s=\");\n\n_c = CodeEditor;\nexport default CodeEditor;\n\nvar _c;\n\n$RefreshReg$(_c, \"CodeEditor\");","map":{"version":3,"sources":["C:/Users/Ryzen/Desktop/Udemy/React and Typescript (Stephen Grider)/jbook/src/components/code-editor.tsx"],"names":["useRef","Editor","prettier","parser","CodeEditor","initialValue","onChange","editorRef","onEditorMount","editor","monaco","current","getValue","onFormatClick","unformatted","formatted","format","plugins","useTabs","semi","singleQuote","setValue","wordWrap","minimap","enabled","showUnused","folding","lineNumbersMinChars","fontSize","scrollBeyondLastLine","automaticLayout"],"mappings":";;;AAAA,SAASA,MAAT,QAAuB,OAAvB;AACA,OAAOC,MAAP,MAAgC,sBAAhC;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,OAAOC,MAAP,MAAmB,uBAAnB;;;AAOA,MAAMC,UAAU,GAAG,QAA6C;AAAA;;AAAA,MAA5C;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA;AAAhB,GAA4C;AAC/D,QAAMC,SAAS,GAAGP,MAAM,CAAM,IAAN,CAAxB;;AAEA,QAAMQ,aAAsB,GAAG,CAACC,MAAD,EAASC,MAAT,KAAoB;AAClDH,IAAAA,SAAS,CAACI,OAAV,GAAoBF,MAApB;AACAH,IAAAA,QAAQ,CAACG,MAAM,CAACG,QAAP,EAAD,CAAR;AACA,GAHD;;AAKA,QAAMC,aAAa,GAAG,MAAM;AAC3B,UAAMC,WAAW,GAAGP,SAAS,CAACI,OAAV,CAAkBC,QAAlB,EAApB;AACA,UAAMG,SAAS,GAAGb,QAAQ,CAACc,MAAT,CAAgBF,WAAhB,EAA6B;AAC9CX,MAAAA,MAAM,EAAE,OADsC;AAE9Cc,MAAAA,OAAO,EAAE,CAAEd,MAAF,CAFqC;AAG9Ce,MAAAA,OAAO,EAAE,IAHqC;AAI9CC,MAAAA,IAAI,EAAE,IAJwC;AAK9CC,MAAAA,WAAW,EAAE;AALiC,KAA7B,CAAlB;AAOAb,IAAAA,SAAS,CAACI,OAAV,CAAkBU,QAAlB,CAA2BN,SAA3B;AACA,GAVD;;AAYA,sBACC;AAAA,4BACC;AAAQ,MAAA,OAAO,EAAEF,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,eAEC,QAAC,MAAD;AACC,MAAA,OAAO,EAAEL,aADV;AAEC,MAAA,KAAK,EAAEH,YAFR;AAGC,MAAA,KAAK,EAAC,SAHP;AAIC,MAAA,QAAQ,EAAC,YAJV;AAKC,MAAA,MAAM,EAAC,MALR;AAMC,MAAA,OAAO,EAAE;AACRiB,QAAAA,QAAQ,EAAE,IADF;AAERC,QAAAA,OAAO,EACN;AACCC,UAAAA,OAAO,EAAE;AADV,SAHO;AAMRC,QAAAA,UAAU,EAAE,KANJ;AAORC,QAAAA,OAAO,EAAE,KAPD;AAQRC,QAAAA,mBAAmB,EAAE,CARb;AASRC,QAAAA,QAAQ,EAAE,EATF;AAURC,QAAAA,oBAAoB,EAAE,KAVd;AAWRC,QAAAA,eAAe,EAAE;AAXT;AANV;AAAA;AAAA;AAAA;AAAA,YAFD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAyBA,CA7CD;;GAAM1B,U;;KAAAA,U;AA+CN,eAAeA,UAAf","sourcesContent":["import { useRef } from \"react\";\r\nimport Editor, { OnMount } from \"@monaco-editor/react\";\r\nimport prettier from \"prettier\";\r\nimport parser from \"prettier/parser-babel\";\r\n\r\ninterface EditorProps {\r\n\tinitialValue: string;\r\n\tonChange(value: string): void;\r\n}\r\n\r\nconst CodeEditor = ({ initialValue, onChange }: EditorProps) => {\r\n\tconst editorRef = useRef<any>(null);\r\n\r\n\tconst onEditorMount: OnMount = (editor, monaco) => {\r\n\t\teditorRef.current = editor;\r\n\t\tonChange(editor.getValue());\r\n\t};\r\n\r\n\tconst onFormatClick = () => {\r\n\t\tconst unformatted = editorRef.current.getValue();\r\n\t\tconst formatted = prettier.format(unformatted, {\r\n\t\t\tparser: \"babel\",\r\n\t\t\tplugins: [ parser ],\r\n\t\t\tuseTabs: true,\r\n\t\t\tsemi: true,\r\n\t\t\tsingleQuote: true\r\n\t\t});\r\n\t\teditorRef.current.setValue(formatted);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<button onClick={onFormatClick}>Format</button>\r\n\t\t\t<Editor\r\n\t\t\t\tonMount={onEditorMount}\r\n\t\t\t\tvalue={initialValue}\r\n\t\t\t\ttheme=\"vs-dark\"\r\n\t\t\t\tlanguage=\"javascript\"\r\n\t\t\t\theight=\"50vh\"\r\n\t\t\t\toptions={{\r\n\t\t\t\t\twordWrap: \"on\",\r\n\t\t\t\t\tminimap:\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tenabled: false\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\tshowUnused: false,\r\n\t\t\t\t\tfolding: false,\r\n\t\t\t\t\tlineNumbersMinChars: 3,\r\n\t\t\t\t\tfontSize: 16,\r\n\t\t\t\t\tscrollBeyondLastLine: false,\r\n\t\t\t\t\tautomaticLayout: true\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default CodeEditor;\r\n"]},"metadata":{},"sourceType":"module"}