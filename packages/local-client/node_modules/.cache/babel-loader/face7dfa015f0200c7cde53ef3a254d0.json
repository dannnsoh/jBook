{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ryzen\\\\Desktop\\\\Udemy\\\\React and Typescript (Stephen Grider)\\\\jbook\\\\src\\\\components\\\\code-editor.tsx\",\n    _s = $RefreshSig$();\n\nimport { useRef } from \"react\";\nimport Editor from \"@monaco-editor/react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CodeEditor = _ref => {\n  _s();\n\n  let {\n    initialValue,\n    onChange\n  } = _ref;\n  const editorRef = useRef(null);\n\n  const onEditorMount = (editor, monaco) => {\n    editorRef.current = editor;\n    console.log(editor.getValue());\n  };\n\n  return /*#__PURE__*/_jsxDEV(Editor, {\n    onMount: onEditorMount,\n    value: initialValue,\n    theme: \"vs-dark\",\n    language: \"javascript\",\n    height: \"50vh\",\n    options: {\n      wordWrap: \"on\",\n      minimap: {\n        enabled: false\n      },\n      showUnused: false,\n      folding: false,\n      lineNumbersMinChars: 3,\n      fontSize: 16,\n      scrollBeyondLastLine: false,\n      automaticLayout: true\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 3\n  }, this);\n};\n\n_s(CodeEditor, \"U23Mj2fZUVBkuOSyNtK9IkK2H0s=\");\n\n_c = CodeEditor;\nexport default CodeEditor;\n\nvar _c;\n\n$RefreshReg$(_c, \"CodeEditor\");","map":{"version":3,"sources":["C:/Users/Ryzen/Desktop/Udemy/React and Typescript (Stephen Grider)/jbook/src/components/code-editor.tsx"],"names":["useRef","Editor","CodeEditor","initialValue","onChange","editorRef","onEditorMount","editor","monaco","current","console","log","getValue","wordWrap","minimap","enabled","showUnused","folding","lineNumbersMinChars","fontSize","scrollBeyondLastLine","automaticLayout"],"mappings":";;;AAAA,SAASA,MAAT,QAAuB,OAAvB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;;AAOA,MAAMC,UAAU,GAAG,QAA6C;AAAA;;AAAA,MAA5C;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA;AAAhB,GAA4C;AAC/D,QAAMC,SAAS,GAAGL,MAAM,CAAM,IAAN,CAAxB;;AAEA,QAAMM,aAAa,GAAG,CAACC,MAAD,EAAcC,MAAd,KAA8B;AACnDH,IAAAA,SAAS,CAACI,OAAV,GAAoBF,MAApB;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAM,CAACK,QAAP,EAAZ;AACA,GAHD;;AAKA,sBACC,QAAC,MAAD;AACC,IAAA,OAAO,EAAEN,aADV;AAEC,IAAA,KAAK,EAAEH,YAFR;AAGC,IAAA,KAAK,EAAC,SAHP;AAIC,IAAA,QAAQ,EAAC,YAJV;AAKC,IAAA,MAAM,EAAC,MALR;AAMC,IAAA,OAAO,EAAE;AACRU,MAAAA,QAAQ,EAAE,IADF;AAERC,MAAAA,OAAO,EACN;AACCC,QAAAA,OAAO,EAAE;AADV,OAHO;AAMRC,MAAAA,UAAU,EAAE,KANJ;AAORC,MAAAA,OAAO,EAAE,KAPD;AAQRC,MAAAA,mBAAmB,EAAE,CARb;AASRC,MAAAA,QAAQ,EAAE,EATF;AAURC,MAAAA,oBAAoB,EAAE,KAVd;AAWRC,MAAAA,eAAe,EAAE;AAXT;AANV;AAAA;AAAA;AAAA;AAAA,UADD;AAsBA,CA9BD;;GAAMnB,U;;KAAAA,U;AAgCN,eAAeA,UAAf","sourcesContent":["import { useRef } from \"react\";\r\nimport Editor from \"@monaco-editor/react\";\r\n\r\ninterface EditorProps {\r\n\tinitialValue: string;\r\n\tonChange(value: string): void;\r\n}\r\n\r\nconst CodeEditor = ({ initialValue, onChange }: EditorProps) => {\r\n\tconst editorRef = useRef<any>(null);\r\n\r\n\tconst onEditorMount = (editor: any, monaco: any) => {\r\n\t\teditorRef.current = editor;\r\n\t\tconsole.log(editor.getValue());\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Editor\r\n\t\t\tonMount={onEditorMount}\r\n\t\t\tvalue={initialValue}\r\n\t\t\ttheme=\"vs-dark\"\r\n\t\t\tlanguage=\"javascript\"\r\n\t\t\theight=\"50vh\"\r\n\t\t\toptions={{\r\n\t\t\t\twordWrap: \"on\",\r\n\t\t\t\tminimap:\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tenabled: false\r\n\t\t\t\t\t},\r\n\t\t\t\tshowUnused: false,\r\n\t\t\t\tfolding: false,\r\n\t\t\t\tlineNumbersMinChars: 3,\r\n\t\t\t\tfontSize: 16,\r\n\t\t\t\tscrollBeyondLastLine: false,\r\n\t\t\t\tautomaticLayout: true\r\n\t\t\t}}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nexport default CodeEditor;\r\n"]},"metadata":{},"sourceType":"module"}