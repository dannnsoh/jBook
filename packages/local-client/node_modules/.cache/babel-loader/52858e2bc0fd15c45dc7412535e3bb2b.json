{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ryzen\\\\Desktop\\\\jbook\\\\src\\\\components\\\\text-editor.tsx\",\n    _s = $RefreshSig$();\n\nimport \"./text-editor.css\";\nimport { useState, useEffect, useRef } from \"react\";\nimport MDEditor from \"@uiw/react-md-editor\";\nimport { Segment } from \"semantic-ui-react\";\nimport { useActions } from \"../hooks/use-actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TextEditor = _ref => {\n  _s();\n\n  let {\n    cell\n  } = _ref;\n  const ref = useRef(null);\n  const [value, setValue] = useState(\"# Header\");\n  const [editing, setEditing] = useState(false);\n  const {\n    updateCell\n  } = useActions();\n  useEffect(() => {\n    const listener = event => {\n      if (ref.current && event.target && ref.current.contains(event.target)) {\n        return;\n      }\n\n      setEditing(false);\n    };\n\n    document.addEventListener(\"click\", listener, {\n      capture: true\n    });\n    return () => {\n      document.removeEventListener(\"click\", listener, {\n        capture: true\n      });\n    };\n  }, []);\n\n  if (editing) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-editor\",\n      ref: ref,\n      children: /*#__PURE__*/_jsxDEV(MDEditor, {\n        value: cell.content,\n        onChange: v => updateCell(cell.id, v || \"\"),\n        autoFocus: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 4\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Segment, {\n    className: \"text-editor\",\n    onClick: () => setEditing(true),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-content\",\n      children: /*#__PURE__*/_jsxDEV(MDEditor.Markdown, {\n        source: cell.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 3\n  }, this);\n};\n\n_s(TextEditor, \"eM7ilPbtHCbBSVXBiDjBTLPFDyo=\", false, function () {\n  return [useActions];\n});\n\n_c = TextEditor;\nexport default TextEditor;\n\nvar _c;\n\n$RefreshReg$(_c, \"TextEditor\");","map":{"version":3,"sources":["C:/Users/Ryzen/Desktop/jbook/src/components/text-editor.tsx"],"names":["useState","useEffect","useRef","MDEditor","Segment","useActions","TextEditor","cell","ref","value","setValue","editing","setEditing","updateCell","listener","event","current","target","contains","document","addEventListener","capture","removeEventListener","content","v","id"],"mappings":";;;AAAA,OAAO,mBAAP;AACA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,MAA9B,QAA4C,OAA5C;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,SAASC,OAAT,QAAwB,mBAAxB;AAEA,SAASC,UAAT,QAA2B,sBAA3B;;;AAMA,MAAMC,UAAU,GAAG,QAA+B;AAAA;;AAAA,MAA9B;AAAEC,IAAAA;AAAF,GAA8B;AACjD,QAAMC,GAAG,GAAGN,MAAM,CAAwB,IAAxB,CAAlB;AACA,QAAM,CAAEO,KAAF,EAASC,QAAT,IAAsBV,QAAQ,CAAqB,UAArB,CAApC;AACA,QAAM,CAAEW,OAAF,EAAWC,UAAX,IAA0BZ,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM;AAAEa,IAAAA;AAAF,MAAiBR,UAAU,EAAjC;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACf,UAAMa,QAAQ,GAAIC,KAAD,IAAuB;AACvC,UAAIP,GAAG,CAACQ,OAAJ,IAAeD,KAAK,CAACE,MAArB,IAA+BT,GAAG,CAACQ,OAAJ,CAAYE,QAAZ,CAAqBH,KAAK,CAACE,MAA3B,CAAnC,EAA+E;AAC9E;AACA;;AACDL,MAAAA,UAAU,CAAC,KAAD,CAAV;AACA,KALD;;AAMAO,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,OAA1B,EAAmCN,QAAnC,EAA6C;AAAEO,MAAAA,OAAO,EAAE;AAAX,KAA7C;AACA,WAAO,MAAM;AACZF,MAAAA,QAAQ,CAACG,mBAAT,CAA6B,OAA7B,EAAsCR,QAAtC,EAAgD;AAAEO,QAAAA,OAAO,EAAE;AAAX,OAAhD;AACA,KAFD;AAGA,GAXQ,EAWN,EAXM,CAAT;;AAaA,MAAIV,OAAJ,EAAa;AACZ,wBACC;AAAK,MAAA,SAAS,EAAC,aAAf;AAA6B,MAAA,GAAG,EAAEH,GAAlC;AAAA,6BACC,QAAC,QAAD;AAAU,QAAA,KAAK,EAAED,IAAI,CAACgB,OAAtB;AAA+B,QAAA,QAAQ,EAAGC,CAAD,IAAOX,UAAU,CAACN,IAAI,CAACkB,EAAN,EAAUD,CAAC,IAAI,EAAf,CAA1D;AAA8E,QAAA,SAAS;AAAvF;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YADD;AAKA;;AAED,sBACC,QAAC,OAAD;AAAS,IAAA,SAAS,EAAC,aAAnB;AAAiC,IAAA,OAAO,EAAE,MAAMZ,UAAU,CAAC,IAAD,CAA1D;AAAA,2BACC;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACC,QAAC,QAAD,CAAU,QAAV;AAAmB,QAAA,MAAM,EAAEL,IAAI,CAACgB;AAAhC;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADD;AAOA,CAlCD;;GAAMjB,U;UAIkBD,U;;;KAJlBC,U;AAoCN,eAAeA,UAAf","sourcesContent":["import \"./text-editor.css\";\r\nimport { useState, useEffect, useRef } from \"react\";\r\nimport MDEditor from \"@uiw/react-md-editor\";\r\nimport { Segment } from \"semantic-ui-react\";\r\nimport { Cell } from \"../state\";\r\nimport { useActions } from \"../hooks/use-actions\";\r\n\r\ninterface TextEditorProps {\r\n\tcell: Cell;\r\n}\r\n\r\nconst TextEditor = ({ cell }: TextEditorProps) => {\r\n\tconst ref = useRef<HTMLDivElement | null>(null);\r\n\tconst [ value, setValue ] = useState<string | undefined>(\"# Header\");\r\n\tconst [ editing, setEditing ] = useState(false);\r\n\tconst { updateCell } = useActions();\r\n\r\n\tuseEffect(() => {\r\n\t\tconst listener = (event: MouseEvent) => {\r\n\t\t\tif (ref.current && event.target && ref.current.contains(event.target as Node)) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tsetEditing(false);\r\n\t\t};\r\n\t\tdocument.addEventListener(\"click\", listener, { capture: true });\r\n\t\treturn () => {\r\n\t\t\tdocument.removeEventListener(\"click\", listener, { capture: true });\r\n\t\t};\r\n\t}, []);\r\n\r\n\tif (editing) {\r\n\t\treturn (\r\n\t\t\t<div className=\"text-editor\" ref={ref}>\r\n\t\t\t\t<MDEditor value={cell.content} onChange={(v) => updateCell(cell.id, v || \"\")} autoFocus />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Segment className=\"text-editor\" onClick={() => setEditing(true)}>\r\n\t\t\t<div className=\"card-content\">\r\n\t\t\t\t<MDEditor.Markdown source={cell.content} />\r\n\t\t\t</div>\r\n\t\t</Segment>\r\n\t);\r\n};\r\n\r\nexport default TextEditor;\r\n"]},"metadata":{},"sourceType":"module"}