{"ast":null,"code":"import\"./preview.css\";import{useRef,useEffect}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";// setup event listener for message and eval the message (bundled code)\n// embed this as inner html in iframe using srcdoc attribute\nvar html=\"\\n    <html>\\n        <head></head>\\n        <body>\\n            <div id=\\\"root\\\"></div>\\n            <script>\\n\\t\\t\\t\\tconst handleError = (err) => {\\n\\t\\t\\t\\t\\tconst root = document.getElementById(\\\"root\\\");\\n\\t\\t\\t\\t\\troot.innerHTML = '<div style=\\\"color: red;\\\"><h4>Runtime Error</h4>' + err + '</div>';\\n\\t\\t\\t\\t\\tconsole.error(err);\\n\\t\\t\\t\\t};\\n\\t\\t\\t\\twindow.addEventListener(\\\"error\\\", (event) => {\\n\\t\\t\\t\\t\\tevent.preventDefault();\\n\\t\\t\\t\\t\\thandleError(event.error);\\n\\t\\t\\t\\t});\\n                window.addEventListener(\\\"message\\\", (event) => {\\n                    try {\\n                        eval(event.data);\\n                    } catch (err) {\\n                        handleError(err);\\n                    }\\n                }, false)\\n            </script>\\n        </body>\\n    </html>\\n\";var Preview=function Preview(_ref){var code=_ref.code,bundleError=_ref.bundleError;var iframe=useRef();useEffect(function(){// update srcdoc of iframe to default state to prevent user from deleting html structure by any chance\niframe.current.srcdoc=html;// slightly delay to allow update of srcdoc first\nsetTimeout(function(){// pass bundled code into iframe element via a ref\niframe.current.contentWindow.postMessage(code,\"*\");},50);},[code]);return/*#__PURE__*/_jsxs(\"div\",{className:\"preview-wrapper\",children:[/*#__PURE__*/_jsx(\"iframe\",{title:\"code preview\",ref:iframe,sandbox:\"allow-scripts\",srcDoc:html}),bundleError&&/*#__PURE__*/_jsxs(\"div\",{className:\"preview-error\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Compilation Error\"}),bundleError]})]});};export default Preview;","map":{"version":3,"sources":["C:/Users/Ryzen/Desktop/jbook/packages/local-client/src/components/preview.tsx"],"names":["useRef","useEffect","html","Preview","code","bundleError","iframe","current","srcdoc","setTimeout","contentWindow","postMessage"],"mappings":"AAAA,MAAO,eAAP,CACA,OAASA,MAAT,CAAiBC,SAAjB,KAAkC,OAAlC,C,wFAOA;AACA;AACA,GAAMC,CAAAA,IAAI,izBAAV,CA2BA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,MAAyC,IAAtCC,CAAAA,IAAsC,MAAtCA,IAAsC,CAAhCC,WAAgC,MAAhCA,WAAgC,CACxD,GAAMC,CAAAA,MAAM,CAAGN,MAAM,EAArB,CAEAC,SAAS,CACR,UAAM,CACL;AACAK,MAAM,CAACC,OAAP,CAAeC,MAAf,CAAwBN,IAAxB,CACA;AACAO,UAAU,CAAC,UAAM,CAChB;AACAH,MAAM,CAACC,OAAP,CAAeG,aAAf,CAA6BC,WAA7B,CAAyCP,IAAzC,CAA+C,GAA/C,EACA,CAHS,CAGP,EAHO,CAAV,CAIA,CATO,CAUR,CAAEA,IAAF,CAVQ,CAAT,CAaA,mBACC,aAAK,SAAS,CAAC,iBAAf,wBACC,eAAQ,KAAK,CAAC,cAAd,CAA6B,GAAG,CAAEE,MAAlC,CAA0C,OAAO,CAAC,eAAlD,CAAkE,MAAM,CAAEJ,IAA1E,EADD,CAEEG,WAAW,eACX,aAAK,SAAS,CAAC,eAAf,wBACC,yCADD,CAEEA,WAFF,GAHF,GADD,CAWA,CA3BD,CA6BA,cAAeF,CAAAA,OAAf","sourcesContent":["import \"./preview.css\";\r\nimport { useRef, useEffect } from \"react\";\r\n\r\ninterface PreviewProps {\r\n\tcode: string;\r\n\tbundleError: string;\r\n}\r\n\r\n// setup event listener for message and eval the message (bundled code)\r\n// embed this as inner html in iframe using srcdoc attribute\r\nconst html = `\r\n    <html>\r\n        <head></head>\r\n        <body>\r\n            <div id=\"root\"></div>\r\n            <script>\r\n\t\t\t\tconst handleError = (err) => {\r\n\t\t\t\t\tconst root = document.getElementById(\"root\");\r\n\t\t\t\t\troot.innerHTML = '<div style=\"color: red;\"><h4>Runtime Error</h4>' + err + '</div>';\r\n\t\t\t\t\tconsole.error(err);\r\n\t\t\t\t};\r\n\t\t\t\twindow.addEventListener(\"error\", (event) => {\r\n\t\t\t\t\tevent.preventDefault();\r\n\t\t\t\t\thandleError(event.error);\r\n\t\t\t\t});\r\n                window.addEventListener(\"message\", (event) => {\r\n                    try {\r\n                        eval(event.data);\r\n                    } catch (err) {\r\n                        handleError(err);\r\n                    }\r\n                }, false)\r\n            </script>\r\n        </body>\r\n    </html>\r\n`;\r\n\r\nconst Preview = ({ code, bundleError }: PreviewProps) => {\r\n\tconst iframe = useRef<any>();\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\t// update srcdoc of iframe to default state to prevent user from deleting html structure by any chance\r\n\t\t\tiframe.current.srcdoc = html;\r\n\t\t\t// slightly delay to allow update of srcdoc first\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\t// pass bundled code into iframe element via a ref\r\n\t\t\t\tiframe.current.contentWindow.postMessage(code, \"*\");\r\n\t\t\t}, 50);\r\n\t\t},\r\n\t\t[ code ]\r\n\t);\r\n\r\n\treturn (\r\n\t\t<div className=\"preview-wrapper\">\r\n\t\t\t<iframe title=\"code preview\" ref={iframe} sandbox=\"allow-scripts\" srcDoc={html} />\r\n\t\t\t{bundleError && (\r\n\t\t\t\t<div className=\"preview-error\">\r\n\t\t\t\t\t<h3>Compilation Error</h3>\r\n\t\t\t\t\t{bundleError}\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Preview;\r\n"]},"metadata":{},"sourceType":"module"}