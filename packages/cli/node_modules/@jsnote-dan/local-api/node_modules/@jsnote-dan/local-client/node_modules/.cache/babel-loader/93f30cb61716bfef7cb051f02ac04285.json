{"ast":null,"code":"import React, { useEffect, useMemo, useRef } from 'react';\nimport \"./index.css\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar DragBar = function DragBar(props) {\n  var _ref = props || {},\n      prefixCls = _ref.prefixCls,\n      onChange = _ref.onChange;\n\n  var dragRef = useRef();\n\n  function handleMouseMove(event) {\n    if (dragRef.current) {\n      var newHeight = dragRef.current.height + event.clientY - dragRef.current.dragY;\n\n      if (newHeight >= props.minHeight && newHeight <= props.maxHeight) {\n        onChange && onChange(dragRef.current.height + (event.clientY - dragRef.current.dragY));\n      }\n    }\n  }\n\n  function handleMouseUp() {\n    dragRef.current = undefined;\n  }\n\n  function handleMouseDown(event) {\n    dragRef.current = {\n      height: props.height,\n      dragY: event.clientY\n    };\n  }\n\n  useEffect(function () {\n    if (document) {\n      document.addEventListener('mousemove', handleMouseMove);\n      document.addEventListener('mouseup', handleMouseUp);\n    }\n\n    return function () {\n      if (document) {\n        document.removeEventListener('mousemove', handleMouseMove);\n        document.removeEventListener('mouseup', handleMouseUp);\n      }\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  var svg = useMemo(function () {\n    return /*#__PURE__*/_jsx(\"svg\", {\n      viewBox: \"0 0 512 512\",\n      height: \"100%\",\n      children: /*#__PURE__*/_jsx(\"path\", {\n        fill: \"currentColor\",\n        d: \"M304 256c0 26.5-21.5 48-48 48s-48-21.5-48-48 21.5-48 48-48 48 21.5 48 48zm120-48c-26.5 0-48 21.5-48 48s21.5 48 48 48 48-21.5 48-48-21.5-48-48-48zm-336 0c-26.5 0-48 21.5-48 48s21.5 48 48 48 48-21.5 48-48-21.5-48-48-48z\"\n      })\n    });\n  }, []);\n  return /*#__PURE__*/_jsx(\"div\", {\n    className: prefixCls + \"-bar\",\n    onMouseDown: handleMouseDown,\n    children: svg\n  });\n};\n\nexport default DragBar;","map":{"version":3,"sources":["../../../src/components/DragBar/index.tsx"],"names":["DragBar","props","onChange","dragRef","useRef","newHeight","event","height","dragY","clientY","useEffect","document","svg","useMemo","prefixCls"],"mappings":"AAAA,OAAA,KAAA,IAAA,SAAA,EAAA,OAAA,EAAA,MAAA,QAAA,OAAA;AAEA,OAAA,aAAA;;;AASA,IAAMA,OAAgC,GAAIC,SAApCD,OAAoCC,CAAAA,KAAD,EAAW;AAClD,aAAgCA,KAAK,IAArC,EAAA;AAAA,MAAM,SAAN,QAAM,SAAN;AAAA,MAAmBC,QAAnB,QAAmBA,QAAnB;;AACA,MAAMC,OAAO,GAAGC,MAAhB,EAAA;;AACA,WAAA,eAAA,CAAA,KAAA,EAA4C;AAC1C,QAAID,OAAO,CAAX,OAAA,EAAqB;AACnB,UAAME,SAAS,GAAGF,OAAO,CAAPA,OAAAA,CAAAA,MAAAA,GAAyBG,KAAK,CAA9BH,OAAAA,GAAyCA,OAAO,CAAPA,OAAAA,CAA3D,KAAA;;AACA,UAAIE,SAAS,IAAIJ,KAAK,CAAlBI,SAAAA,IAAgCA,SAAS,IAAIJ,KAAK,CAAtD,SAAA,EAAkE;AAChEC,QAAAA,QAAQ,IAAIA,QAAQ,CAACC,OAAO,CAAPA,OAAAA,CAAAA,MAAAA,IAA0BG,KAAK,CAALA,OAAAA,GAAgBH,OAAO,CAAPA,OAAAA,CAA/DD,KAAqBC,CAAD,CAApBD;AACD;AACF;AACF;;AACD,WAAA,aAAA,GAAyB;AACvBC,IAAAA,OAAO,CAAPA,OAAAA,GAAAA,SAAAA;AACD;;AACD,WAAA,eAAA,CAAA,KAAA,EAA8E;AAC5EA,IAAAA,OAAO,CAAPA,OAAAA,GAAkB;AAChBI,MAAAA,MAAM,EAAEN,KAAK,CADG,MAAA;AAEhBO,MAAAA,KAAK,EAAEF,KAAK,CAACG;AAFG,KAAlBN;AAID;;AAEDO,EAAAA,SAAS,CAAC,YAAM;AACd,QAAA,QAAA,EAAc;AACZC,MAAAA,QAAQ,CAARA,gBAAAA,CAAAA,WAAAA,EAAAA,eAAAA;AACAA,MAAAA,QAAQ,CAARA,gBAAAA,CAAAA,SAAAA,EAAAA,aAAAA;AACD;;AACD,WAAO,YAAM;AACX,UAAA,QAAA,EAAc;AACZA,QAAAA,QAAQ,CAARA,mBAAAA,CAAAA,WAAAA,EAAAA,eAAAA;AACAA,QAAAA,QAAQ,CAARA,mBAAAA,CAAAA,SAAAA,EAAAA,aAAAA;AACD;AATW,KAKd,CALc,CAWd;AAXO,GAAA,EAATD,EAAS,CAATA;AAaA,MAAME,GAAG,GAAGC,OAAO,CACjB;AAAA,WAAA,aACE,IAAA,CAAA,KAAA,EAAA;AAAK,MAAA,OAAO,EAAZ,aAAA;AAA2B,MAAA,MAAM,EAAjC,MAAA;AAAA,MAAA,QAAA,EAAA,aACE,IAAA,CAAA,MAAA,EAAA;AACE,QAAA,IAAI,EADN,cAAA;AAEE,QAAA,CAAC,EAAC;AAFJ,OAAA;AADF,KAAA,CADF;AAAA,GADiB,EAAnB,EAAmB,CAAnB;AAWA,SAAA,aACE,IAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAKC,SAAL,GAAd,MAAA;AAAoC,IAAA,WAAW,EAA/C,eAAA;AAAA,IAAA,QAAA,EACGF;AADH,GAAA,CADF;AA7CF,CAAA;;AAoDA,eAAA,OAAA","sourcesContent":["import React, { useEffect, useMemo, useRef } from 'react';\nimport { IProps } from '../../Editor';\nimport './index.less';\n\nexport interface IDragBarProps extends IProps {\n  height: number;\n  maxHeight: number;\n  minHeight: number;\n  onChange: (value: number) => void;\n}\n\nconst DragBar: React.FC<IDragBarProps> = (props) => {\n  const { prefixCls, onChange } = props || {};\n  const dragRef = useRef<{ height: number; dragY: number }>();\n  function handleMouseMove(event: MouseEvent) {\n    if (dragRef.current) {\n      const newHeight = dragRef.current.height + event.clientY - dragRef.current.dragY;\n      if (newHeight >= props.minHeight && newHeight <= props.maxHeight) {\n        onChange && onChange(dragRef.current.height + (event.clientY - dragRef.current.dragY));\n      }\n    }\n  }\n  function handleMouseUp() {\n    dragRef.current = undefined;\n  }\n  function handleMouseDown(event: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    dragRef.current = {\n      height: props.height,\n      dragY: event.clientY,\n    };\n  }\n\n  useEffect(() => {\n    if (document) {\n      document.addEventListener('mousemove', handleMouseMove);\n      document.addEventListener('mouseup', handleMouseUp);\n    }\n    return () => {\n      if (document) {\n        document.removeEventListener('mousemove', handleMouseMove);\n        document.removeEventListener('mouseup', handleMouseUp);\n      }\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  const svg = useMemo(\n    () => (\n      <svg viewBox=\"0 0 512 512\" height=\"100%\">\n        <path\n          fill=\"currentColor\"\n          d=\"M304 256c0 26.5-21.5 48-48 48s-48-21.5-48-48 21.5-48 48-48 48 21.5 48 48zm120-48c-26.5 0-48 21.5-48 48s21.5 48 48 48 48-21.5 48-48-21.5-48-48-48zm-336 0c-26.5 0-48 21.5-48 48s21.5 48 48 48 48-21.5 48-48-21.5-48-48-48z\"\n        />\n      </svg>\n    ),\n    [],\n  );\n  return (\n    <div className={`${prefixCls}-bar`} onMouseDown={handleMouseDown}>\n      {svg}\n    </div>\n  );\n};\n\nexport default DragBar;\n"]},"metadata":{},"sourceType":"module"}