{"ast":null,"code":"import\"./cell-list.css\";import{useTypedSelector}from\"../hooks/use-typed-selector\";import AddCell from\"./add-cell\";import CellListItem from\"./cell-list-item\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var CellList=function CellList(){// extract state.cells.order and .data from store\n// map over each cell id in order array and return the corresponding cells from data\n// cells variable is an array of cells in order\nvar cells=useTypedSelector(function(_ref){var _ref$cells=_ref.cells,order=_ref$cells.order,data=_ref$cells.data;return order.map(function(id){return data[id];});});// map over each cell in cells, and render a CellListItem for each cell\nvar renderedCells=cells.map(function(cell){return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(CellListItem,{cell:cell}),/*#__PURE__*/_jsx(AddCell,{previousCellId:cell.id})]},cell.id);});return/*#__PURE__*/_jsxs(\"div\",{className:\"cell-list\",children:[/*#__PURE__*/_jsx(AddCell,{forceVisible:cells.length===0,previousCellId:null}),renderedCells]});};export default CellList;","map":{"version":3,"sources":["C:/Users/Ryzen/Desktop/jbook/packages/local-client/src/components/cell-list.tsx"],"names":["useTypedSelector","AddCell","CellListItem","CellList","cells","order","data","map","id","renderedCells","cell","length"],"mappings":"AAAA,MAAO,iBAAP,CACA,OAASA,gBAAT,KAAiC,6BAAjC,CACA,MAAOC,CAAAA,OAAP,KAAoB,YAApB,CACA,MAAOC,CAAAA,YAAP,KAAyB,kBAAzB,C,wFAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAAM,CACtB;AACA;AACA;AACA,GAAMC,CAAAA,KAAK,CAAGJ,gBAAgB,CAAC,mCAAGI,KAAH,CAAYC,KAAZ,YAAYA,KAAZ,CAAmBC,IAAnB,YAAmBA,IAAnB,OAAgCD,CAAAA,KAAK,CAACE,GAAN,CAAU,SAACC,EAAD,QAAQF,CAAAA,IAAI,CAACE,EAAD,CAAZ,EAAV,CAAhC,EAAD,CAA9B,CACA;AACA,GAAMC,CAAAA,aAAa,CAAGL,KAAK,CAACG,GAAN,CAAU,SAACG,IAAD,CAAU,CACzC,mBACC,oCACC,KAAC,YAAD,EAAc,IAAI,CAAEA,IAApB,EADD,cAEC,KAAC,OAAD,EAAS,cAAc,CAAEA,IAAI,CAACF,EAA9B,EAFD,GAAUE,IAAI,CAACF,EAAf,CADD,CAMA,CAPqB,CAAtB,CASA,mBACC,aAAK,SAAS,CAAC,WAAf,wBACC,KAAC,OAAD,EAAS,YAAY,CAAEJ,KAAK,CAACO,MAAN,GAAiB,CAAxC,CAA2C,cAAc,CAAE,IAA3D,EADD,CAEEF,aAFF,GADD,CAMA,CArBD,CAuBA,cAAeN,CAAAA,QAAf","sourcesContent":["import \"./cell-list.css\";\r\nimport { useTypedSelector } from \"../hooks/use-typed-selector\";\r\nimport AddCell from \"./add-cell\";\r\nimport CellListItem from \"./cell-list-item\";\r\n\r\nconst CellList = () => {\r\n\t// extract state.cells.order and .data from store\r\n\t// map over each cell id in order array and return the corresponding cells from data\r\n\t// cells variable is an array of cells in order\r\n\tconst cells = useTypedSelector(({ cells: { order, data } }) => order.map((id) => data[id]));\r\n\t// map over each cell in cells, and render a CellListItem for each cell\r\n\tconst renderedCells = cells.map((cell) => {\r\n\t\treturn (\r\n\t\t\t<div key={cell.id}>\r\n\t\t\t\t<CellListItem cell={cell} />\r\n\t\t\t\t<AddCell previousCellId={cell.id} />\r\n\t\t\t</div>\r\n\t\t);\r\n\t});\r\n\r\n\treturn (\r\n\t\t<div className=\"cell-list\">\r\n\t\t\t<AddCell forceVisible={cells.length === 0} previousCellId={null} />\r\n\t\t\t{renderedCells}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default CellList;\r\n"]},"metadata":{},"sourceType":"module"}