{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ryzen\\\\Desktop\\\\jbook\\\\src\\\\components\\\\add-cell.tsx\",\n    _s = $RefreshSig$();\n\nimport \"./add-cell.css\";\nimport { useActions } from \"../hooks/use-actions\";\nimport { Button, Icon, Divider } from \"semantic-ui-react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddCell = _ref => {\n  _s();\n\n  let {\n    nextCellId,\n    forceVisible\n  } = _ref;\n  const {\n    insertCellAfter\n  } = useActions();\n  return /*#__PURE__*/_jsxDEV(Divider, {\n    horizontal: true,\n    section: true,\n    children: /*#__PURE__*/_jsxDEV(Button.Group, {\n      className: `add-cell ${forceVisible ? \"force-visible\" : \"\"}`,\n      compact: true,\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        animated: \"fade\",\n        className: \"add-cell-button\",\n        onClick: () => insertCellAfter(nextCellId, \"code\"),\n        children: [/*#__PURE__*/_jsxDEV(Button.Content, {\n          visible: true,\n          children: \"Code\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Button.Content, {\n          hidden: true,\n          children: /*#__PURE__*/_jsxDEV(Icon, {\n            name: \"add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        animated: \"fade\",\n        className: \"add-cell-button\",\n        onClick: () => insertCellAfter(nextCellId, \"text\"),\n        children: [/*#__PURE__*/_jsxDEV(Button.Content, {\n          visible: true,\n          children: \"Text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Button.Content, {\n          hidden: true,\n          children: /*#__PURE__*/_jsxDEV(Icon, {\n            name: \"add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 3\n  }, this);\n};\n\n_s(AddCell, \"ain1WfJPsCStQGbSx2B93tc4GvE=\", false, function () {\n  return [useActions];\n});\n\n_c = AddCell;\nexport default AddCell;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddCell\");","map":{"version":3,"sources":["C:/Users/Ryzen/Desktop/jbook/src/components/add-cell.tsx"],"names":["useActions","Button","Icon","Divider","AddCell","nextCellId","forceVisible","insertCellAfter"],"mappings":";;;AAAA,OAAO,gBAAP;AACA,SAASA,UAAT,QAA2B,sBAA3B;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,OAAvB,QAAsC,mBAAtC;;;AAOA,MAAMC,OAAO,GAAG,QAAgD;AAAA;;AAAA,MAA/C;AAAEC,IAAAA,UAAF;AAAcC,IAAAA;AAAd,GAA+C;AAC/D,QAAM;AAAEC,IAAAA;AAAF,MAAsBP,UAAU,EAAtC;AAEA,sBACC,QAAC,OAAD;AAAS,IAAA,UAAU,MAAnB;AAAoB,IAAA,OAAO,MAA3B;AAAA,2BACC,QAAC,MAAD,CAAQ,KAAR;AAAc,MAAA,SAAS,EAAG,YAAWM,YAAY,GAAG,eAAH,GAAqB,EAAG,EAAzE;AAA4E,MAAA,OAAO,MAAnF;AAAA,8BACC,QAAC,MAAD;AAAQ,QAAA,QAAQ,EAAC,MAAjB;AAAwB,QAAA,SAAS,EAAC,iBAAlC;AAAoD,QAAA,OAAO,EAAE,MAAMC,eAAe,CAACF,UAAD,EAAa,MAAb,CAAlF;AAAA,gCACC,QAAC,MAAD,CAAQ,OAAR;AAAgB,UAAA,OAAO,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,eAEC,QAAC,MAAD,CAAQ,OAAR;AAAgB,UAAA,MAAM,MAAtB;AAAA,iCACC,QAAC,IAAD;AAAM,YAAA,IAAI,EAAC;AAAX;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,gBAFD;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,eAOC,QAAC,MAAD;AAAQ,QAAA,QAAQ,EAAC,MAAjB;AAAwB,QAAA,SAAS,EAAC,iBAAlC;AAAoD,QAAA,OAAO,EAAE,MAAME,eAAe,CAACF,UAAD,EAAa,MAAb,CAAlF;AAAA,gCACC,QAAC,MAAD,CAAQ,OAAR;AAAgB,UAAA,OAAO,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,eAEC,QAAC,MAAD,CAAQ,OAAR;AAAgB,UAAA,MAAM,MAAtB;AAAA,iCACC,QAAC,IAAD;AAAM,YAAA,IAAI,EAAC;AAAX;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,gBAFD;AAAA;AAAA;AAAA;AAAA;AAAA,cAPD;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADD;AAkBA,CArBD;;GAAMD,O;UACuBJ,U;;;KADvBI,O;AAuBN,eAAeA,OAAf","sourcesContent":["import \"./add-cell.css\";\r\nimport { useActions } from \"../hooks/use-actions\";\r\nimport { Button, Icon, Divider } from \"semantic-ui-react\";\r\n\r\ninterface AddCellProps {\r\n\tnextCellId: string | null;\r\n\tforceVisible?: boolean;\r\n}\r\n\r\nconst AddCell = ({ nextCellId, forceVisible }: AddCellProps) => {\r\n\tconst { insertCellAfter } = useActions();\r\n\r\n\treturn (\r\n\t\t<Divider horizontal section>\r\n\t\t\t<Button.Group className={`add-cell ${forceVisible ? \"force-visible\" : \"\"}`} compact>\r\n\t\t\t\t<Button animated=\"fade\" className=\"add-cell-button\" onClick={() => insertCellAfter(nextCellId, \"code\")}>\r\n\t\t\t\t\t<Button.Content visible>Code</Button.Content>\r\n\t\t\t\t\t<Button.Content hidden>\r\n\t\t\t\t\t\t<Icon name=\"add\" />\r\n\t\t\t\t\t</Button.Content>\r\n\t\t\t\t</Button>\r\n\t\t\t\t<Button animated=\"fade\" className=\"add-cell-button\" onClick={() => insertCellAfter(nextCellId, \"text\")}>\r\n\t\t\t\t\t<Button.Content visible>Text</Button.Content>\r\n\t\t\t\t\t<Button.Content hidden>\r\n\t\t\t\t\t\t<Icon name=\"add\" />\r\n\t\t\t\t\t</Button.Content>\r\n\t\t\t\t</Button>\r\n\t\t\t</Button.Group>\r\n\t\t</Divider>\r\n\t);\r\n};\r\n\r\nexport default AddCell;\r\n"]},"metadata":{},"sourceType":"module"}