{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ryzen\\\\Desktop\\\\Udemy\\\\React and Typescript (Stephen Grider)\\\\jbook\\\\src\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport * as esbuild from \"esbuild-wasm\";\nimport { useState, useEffect, useRef } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { unpkgPathPlugin } from \"./plugins/unpkg-path-plugin\";\nimport { fetchPlugin } from \"./plugins/fetch-plugin\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const ref = useRef();\n  const iframe = useRef();\n  const [input, setInput] = useState(\"\");\n\n  const startService = async () => {\n    await esbuild.initialize({\n      worker: true,\n      wasmURL: \"https://unpkg.com/esbuild-wasm/esbuild.wasm\"\n    });\n    ref.current = true;\n  };\n\n  useEffect(() => {\n    startService();\n  }, []);\n\n  const onClick = async () => {\n    if (!ref.current) {\n      return;\n    } else {\n      // reload iframe to prevent user from deleting html structure\n      iframe.current.srcdoc = html; // bundle code\n\n      const result = await esbuild.build({\n        entryPoints: [\"index.js\"],\n        bundle: true,\n        write: false,\n        plugins: [unpkgPathPlugin(), fetchPlugin(input)],\n        define: {\n          \"process.env.NODE_ENV\": '\"production\"',\n          global: \"window\"\n        }\n      }); // pass bundled code into iframe element via a ref\n\n      iframe.current.contentWindow.postMessage(result.outputFiles[0].text, \"*\");\n    }\n  }; // setup event listener for message and eval the message (bundled code)\n  // embed this as inner html in iframe using srcdoc attribute\n\n\n  const html = `\n\t\t<html>\n\t\t\t<head></head>\n\t\t\t<body>\n\t\t\t\t<div id=\"root\"></div>\n\t\t\t\t<script>\n\t\t\t\t\twindow.addEventListener(\"message\", (event) => {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\teval(event.data);\n\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\tconst root = document.getElementById(\"root\");\n\t\t\t\t\t\t\troot.innerHTML = '<div style=\"color: red;\"><h4>Runtime Error</h4>' + err + '</div>';\n\t\t\t\t\t\t\tconsole.error(err);\n\t\t\t\t\t\t}\n\t\t\t\t\t}, false)\n\t\t\t\t</script>\n\t\t\t</body>\n\t\t</html>\n\t`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      rows: 10,\n      cols: 50,\n      value: input,\n      onChange: event => setInput(event.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onClick,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"iframe\", {\n      title: \"code preview\",\n      ref: iframe,\n      sandbox: \"allow-scripts\",\n      srcDoc: html\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 3\n  }, this);\n};\n\n_s(App, \"ZmV179/uKZMUfhAGvyLKc1haXdU=\");\n\n_c = App;\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 80,\n  columnNumber: 17\n}, this), document.getElementById(\"root\"));\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Ryzen/Desktop/Udemy/React and Typescript (Stephen Grider)/jbook/src/index.tsx"],"names":["esbuild","useState","useEffect","useRef","ReactDOM","unpkgPathPlugin","fetchPlugin","App","ref","iframe","input","setInput","startService","initialize","worker","wasmURL","current","onClick","srcdoc","html","result","build","entryPoints","bundle","write","plugins","define","global","contentWindow","postMessage","outputFiles","text","event","target","value","render","document","getElementById"],"mappings":";;;AAAA,OAAO,KAAKA,OAAZ,MAAyB,cAAzB;AACA,SAASC,QAAT,EAAmBC,SAAnB,EAA8BC,MAA9B,QAA4C,OAA5C;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,eAAT,QAAgC,6BAAhC;AACA,SAASC,WAAT,QAA4B,wBAA5B;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AACjB,QAAMC,GAAG,GAAGL,MAAM,EAAlB;AACA,QAAMM,MAAM,GAAGN,MAAM,EAArB;AACA,QAAM,CAAEO,KAAF,EAASC,QAAT,IAAsBV,QAAQ,CAAC,EAAD,CAApC;;AAEA,QAAMW,YAAY,GAAG,YAAY;AAChC,UAAMZ,OAAO,CAACa,UAAR,CAAmB;AACxBC,MAAAA,MAAM,EAAE,IADgB;AAExBC,MAAAA,OAAO,EAAE;AAFe,KAAnB,CAAN;AAIAP,IAAAA,GAAG,CAACQ,OAAJ,GAAc,IAAd;AACA,GAND;;AAQAd,EAAAA,SAAS,CAAC,MAAM;AACfU,IAAAA,YAAY;AACZ,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMK,OAAO,GAAG,YAAY;AAC3B,QAAI,CAACT,GAAG,CAACQ,OAAT,EAAkB;AACjB;AACA,KAFD,MAEO;AACN;AACAP,MAAAA,MAAM,CAACO,OAAP,CAAeE,MAAf,GAAwBC,IAAxB,CAFM,CAGN;;AACA,YAAMC,MAAM,GAAG,MAAMpB,OAAO,CAACqB,KAAR,CAAc;AAClCC,QAAAA,WAAW,EAAE,CAAE,UAAF,CADqB;AAElCC,QAAAA,MAAM,EAAE,IAF0B;AAGlCC,QAAAA,KAAK,EAAE,KAH2B;AAIlCC,QAAAA,OAAO,EAAE,CAAEpB,eAAe,EAAjB,EAAqBC,WAAW,CAACI,KAAD,CAAhC,CAJyB;AAKlCgB,QAAAA,MAAM,EACL;AACC,kCAAwB,cADzB;AAECC,UAAAA,MAAM,EAAE;AAFT;AANiC,OAAd,CAArB,CAJM,CAeN;;AACAlB,MAAAA,MAAM,CAACO,OAAP,CAAeY,aAAf,CAA6BC,WAA7B,CAAyCT,MAAM,CAACU,WAAP,CAAmB,CAAnB,EAAsBC,IAA/D,EAAqE,GAArE;AACA;AACD,GArBD,CAjBiB,CAwCjB;AACA;;;AACA,QAAMZ,IAAI,GAAI;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAlBC;AAoBA,sBACC;AAAA,4BACC;AAAU,MAAA,IAAI,EAAE,EAAhB;AAAoB,MAAA,IAAI,EAAE,EAA1B;AAA8B,MAAA,KAAK,EAAET,KAArC;AAA4C,MAAA,QAAQ,EAAGsB,KAAD,IAAWrB,QAAQ,CAACqB,KAAK,CAACC,MAAN,CAAaC,KAAd;AAAzE;AAAA;AAAA;AAAA;AAAA,YADD,eAEC;AAAA,6BACC;AAAQ,QAAA,OAAO,EAAEjB,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YAFD,eAKC;AAAQ,MAAA,KAAK,EAAC,cAAd;AAA6B,MAAA,GAAG,EAAER,MAAlC;AAA0C,MAAA,OAAO,EAAC,eAAlD;AAAkE,MAAA,MAAM,EAAEU;AAA1E;AAAA;AAAA;AAAA;AAAA,YALD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AASA,CAvED;;GAAMZ,G;;KAAAA,G;AAyENH,QAAQ,CAAC+B,MAAT,eAAgB,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,QAAhB,EAAyBC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAzB","sourcesContent":["import * as esbuild from \"esbuild-wasm\";\r\nimport { useState, useEffect, useRef } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { unpkgPathPlugin } from \"./plugins/unpkg-path-plugin\";\r\nimport { fetchPlugin } from \"./plugins/fetch-plugin\";\r\n\r\nconst App = () => {\r\n\tconst ref = useRef<any>();\r\n\tconst iframe = useRef<any>();\r\n\tconst [ input, setInput ] = useState(\"\");\r\n\r\n\tconst startService = async () => {\r\n\t\tawait esbuild.initialize({\r\n\t\t\tworker: true,\r\n\t\t\twasmURL: \"https://unpkg.com/esbuild-wasm/esbuild.wasm\"\r\n\t\t});\r\n\t\tref.current = true;\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tstartService();\r\n\t}, []);\r\n\r\n\tconst onClick = async () => {\r\n\t\tif (!ref.current) {\r\n\t\t\treturn;\r\n\t\t} else {\r\n\t\t\t// reload iframe to prevent user from deleting html structure\r\n\t\t\tiframe.current.srcdoc = html;\r\n\t\t\t// bundle code\r\n\t\t\tconst result = await esbuild.build({\r\n\t\t\t\tentryPoints: [ \"index.js\" ],\r\n\t\t\t\tbundle: true,\r\n\t\t\t\twrite: false,\r\n\t\t\t\tplugins: [ unpkgPathPlugin(), fetchPlugin(input) ],\r\n\t\t\t\tdefine:\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t\"process.env.NODE_ENV\": '\"production\"',\r\n\t\t\t\t\t\tglobal: \"window\"\r\n\t\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t// pass bundled code into iframe element via a ref\r\n\t\t\tiframe.current.contentWindow.postMessage(result.outputFiles[0].text, \"*\");\r\n\t\t}\r\n\t};\r\n\r\n\t// setup event listener for message and eval the message (bundled code)\r\n\t// embed this as inner html in iframe using srcdoc attribute\r\n\tconst html = `\r\n\t\t<html>\r\n\t\t\t<head></head>\r\n\t\t\t<body>\r\n\t\t\t\t<div id=\"root\"></div>\r\n\t\t\t\t<script>\r\n\t\t\t\t\twindow.addEventListener(\"message\", (event) => {\r\n\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\teval(event.data);\r\n\t\t\t\t\t\t} catch (err) {\r\n\t\t\t\t\t\t\tconst root = document.getElementById(\"root\");\r\n\t\t\t\t\t\t\troot.innerHTML = '<div style=\"color: red;\"><h4>Runtime Error</h4>' + err + '</div>';\r\n\t\t\t\t\t\t\tconsole.error(err);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, false)\r\n\t\t\t\t</script>\r\n\t\t\t</body>\r\n\t\t</html>\r\n\t`;\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<textarea rows={10} cols={50} value={input} onChange={(event) => setInput(event.target.value)} />\r\n\t\t\t<div>\r\n\t\t\t\t<button onClick={onClick}>Submit</button>\r\n\t\t\t</div>\r\n\t\t\t<iframe title=\"code preview\" ref={iframe} sandbox=\"allow-scripts\" srcDoc={html} />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"]},"metadata":{},"sourceType":"module"}