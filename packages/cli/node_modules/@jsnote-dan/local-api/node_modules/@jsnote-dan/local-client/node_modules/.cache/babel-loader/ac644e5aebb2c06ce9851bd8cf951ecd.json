{"ast":null,"code":"import { visit } from 'unist-util-visit';\nimport { selectAll } from 'hast-util-select';\n\nvar remarkRewrite = function remarkRewrite(options) {\n  var _ref = options || {},\n      selector = _ref.selector,\n      rewrite = _ref.rewrite;\n\n  return function (tree) {\n    if (!rewrite || typeof rewrite !== 'function') return;\n\n    if (selector && typeof selector === 'string') {\n      var selected = selectAll(selector, tree);\n\n      if (selected && selected.length > 0) {\n        visit(tree, selected, function (node, index, parent) {\n          rewrite(node, index, parent);\n        });\n      }\n\n      return;\n    }\n\n    visit(tree, function (node, index, parent) {\n      rewrite(node, index, parent);\n    });\n  };\n};\n\nexport default remarkRewrite;","map":{"version":3,"sources":["../src/index.ts"],"names":[],"mappings":"AAEA,SAAS,KAAT,QAAsB,kBAAtB;AACA,SAAS,SAAT,QAA0B,kBAA1B;;AAQA,IAAM,aAAa,GAA0C,SAAvD,aAAuD,CAAC,OAAD,EAAY;AACvE,aAA8B,OAAO,IAAI,EAAzC;AAAA,MAAQ,QAAR,QAAQ,QAAR;AAAA,MAAkB,OAAlB,QAAkB,OAAlB;;AACA,SAAO,UAAC,IAAD,EAAS;AACd,QAAI,CAAC,OAAD,IAAY,OAAO,OAAP,KAAmB,UAAnC,EAA+C;;AAC/C,QAAI,QAAQ,IAAI,OAAO,QAAP,KAAoB,QAApC,EAA8C;AAC5C,UAAM,QAAQ,GAAG,SAAS,CAAC,QAAD,EAAW,IAAX,CAA1B;;AACA,UAAI,QAAQ,IAAI,QAAQ,CAAC,MAAT,GAAkB,CAAlC,EAAqC;AACnC,QAAA,KAAK,CAAC,IAAD,EAAO,QAAP,EAAoC,UAAC,IAAD,EAAgB,KAAhB,EAAuB,MAAvB,EAAiC;AACxE,UAAA,OAAO,CAAC,IAAD,EAAO,KAAP,EAAc,MAAd,CAAP;AACD,SAFI,CAAL;AAGD;;AACD;AACD;;AAED,IAAA,KAAK,CAAC,IAAD,EAAO,UAAC,IAAD,EAAuB,KAAvB,EAA8B,MAA9B,EAAwC;AAClD,MAAA,OAAO,CAAC,IAAD,EAAO,KAAP,EAAc,MAAd,CAAP;AACD,KAFI,CAAL;AAGD,GAfD;AAgBD,CAlBD;;AAoBA,eAAe,aAAf","sourceRoot":"","sourcesContent":["import { visit } from 'unist-util-visit';\nimport { selectAll } from 'hast-util-select';\nconst remarkRewrite = (options) => {\n    const { selector, rewrite } = options || {};\n    return (tree) => {\n        if (!rewrite || typeof rewrite !== 'function')\n            return;\n        if (selector && typeof selector === 'string') {\n            const selected = selectAll(selector, tree);\n            if (selected && selected.length > 0) {\n                visit(tree, selected, (node, index, parent) => {\n                    rewrite(node, index, parent);\n                });\n            }\n            return;\n        }\n        visit(tree, (node, index, parent) => {\n            rewrite(node, index, parent);\n        });\n    };\n};\nexport default remarkRewrite;\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}