{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ryzen\\\\Desktop\\\\jbook\\\\src\\\\components\\\\code-cell.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport CodeEditor from \"./code-editor\";\nimport Preview from \"./preview\";\nimport bundle from \"../bundler\";\nimport Resizable from \"./resizable\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CodeCell = () => {\n  _s();\n\n  const [code, setCode] = useState(\"\");\n  const [input, setInput] = useState(\"\");\n  useEffect(() => {\n    const timer = setTimeout(async () => {\n      const output = await bundle(input);\n      output && setCode(output);\n    }, 500);\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [input]);\n  return /*#__PURE__*/_jsxDEV(Resizable, {\n    direction: \"vertical\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: \"100%\",\n        display: \"flex\",\n        flexDirection: \"row\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Resizable, {\n        direction: \"horizontal\",\n        children: /*#__PURE__*/_jsxDEV(CodeEditor, {\n          initialValue: \"const a = 1;\",\n          onChange: value => setInput(value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Preview, {\n        code: code\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 3\n  }, this);\n};\n\n_s(CodeCell, \"UBlDLhr3wArjipU0Vhq4QM899fI=\");\n\n_c = CodeCell;\nexport default CodeCell;\n\nvar _c;\n\n$RefreshReg$(_c, \"CodeCell\");","map":{"version":3,"sources":["C:/Users/Ryzen/Desktop/jbook/src/components/code-cell.tsx"],"names":["useState","useEffect","CodeEditor","Preview","bundle","Resizable","CodeCell","code","setCode","input","setInput","timer","setTimeout","output","clearTimeout","height","display","flexDirection","value"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,MAAP,MAAmB,YAAnB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACtB,QAAM,CAAEC,IAAF,EAAQC,OAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAAES,KAAF,EAASC,QAAT,IAAsBV,QAAQ,CAAC,EAAD,CAApC;AAEAC,EAAAA,SAAS,CACR,MAAM;AACL,UAAMU,KAAK,GAAGC,UAAU,CAAC,YAAY;AACpC,YAAMC,MAAM,GAAG,MAAMT,MAAM,CAACK,KAAD,CAA3B;AACAI,MAAAA,MAAM,IAAIL,OAAO,CAACK,MAAD,CAAjB;AACA,KAHuB,EAGrB,GAHqB,CAAxB;AAKA,WAAO,MAAM;AACZC,MAAAA,YAAY,CAACH,KAAD,CAAZ;AACA,KAFD;AAGA,GAVO,EAWR,CAAEF,KAAF,CAXQ,CAAT;AAcA,sBACC,QAAC,SAAD;AAAW,IAAA,SAAS,EAAC,UAArB;AAAA,2BACC;AAAK,MAAA,KAAK,EAAE;AAAEM,QAAAA,MAAM,EAAE,MAAV;AAAkBC,QAAAA,OAAO,EAAE,MAA3B;AAAmCC,QAAAA,aAAa,EAAE;AAAlD,OAAZ;AAAA,8BACC,QAAC,SAAD;AAAW,QAAA,SAAS,EAAC,YAArB;AAAA,+BACC,QAAC,UAAD;AAAY,UAAA,YAAY,EAAC,cAAzB;AAAwC,UAAA,QAAQ,EAAGC,KAAD,IAAWR,QAAQ,CAACQ,KAAD;AAArE;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,cADD,eAIC,QAAC,OAAD;AAAS,QAAA,IAAI,EAAEX;AAAf;AAAA;AAAA;AAAA;AAAA,cAJD;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADD;AAUA,CA5BD;;GAAMD,Q;;KAAAA,Q;AA8BN,eAAeA,QAAf","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport CodeEditor from \"./code-editor\";\r\nimport Preview from \"./preview\";\r\nimport bundle from \"../bundler\";\r\nimport Resizable from \"./resizable\";\r\n\r\nconst CodeCell = () => {\r\n\tconst [ code, setCode ] = useState(\"\");\r\n\tconst [ input, setInput ] = useState(\"\");\r\n\r\n\tuseEffect(\r\n\t\t() => {\r\n\t\t\tconst timer = setTimeout(async () => {\r\n\t\t\t\tconst output = await bundle(input);\r\n\t\t\t\toutput && setCode(output);\r\n\t\t\t}, 500);\r\n\r\n\t\t\treturn () => {\r\n\t\t\t\tclearTimeout(timer);\r\n\t\t\t};\r\n\t\t},\r\n\t\t[ input ]\r\n\t);\r\n\r\n\treturn (\r\n\t\t<Resizable direction=\"vertical\">\r\n\t\t\t<div style={{ height: \"100%\", display: \"flex\", flexDirection: \"row\" }}>\r\n\t\t\t\t<Resizable direction=\"horizontal\">\r\n\t\t\t\t\t<CodeEditor initialValue=\"const a = 1;\" onChange={(value) => setInput(value)} />\r\n\t\t\t\t</Resizable>\r\n\t\t\t\t<Preview code={code} />\r\n\t\t\t</div>\r\n\t\t</Resizable>\r\n\t);\r\n};\r\n\r\nexport default CodeCell;\r\n"]},"metadata":{},"sourceType":"module"}