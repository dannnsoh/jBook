{"ast":null,"code":"export const unpkgPathPlugin = () => {\n  return {\n    name: \"unpkg-path-plugin\",\n\n    setup(build) {\n      // esbuild figuring out where the index.js file is stored\n      build.onResolve({\n        filter: /.*/\n      }, async args => {\n        console.log(\"onResole\", args); // returns the found path\n\n        return {\n          path: args.path,\n          namespace: \"a\"\n        };\n      });\n      build.onLoad({\n        filter: /.*/\n      }, async args => {\n        console.log(\"onLoad\", args);\n\n        if (args.path === \"index.js\") {\n          return {\n            loader: \"jsx\",\n            contents: `\n              import message from './message';\n              console.log(message);\n            `\n          };\n        } else {\n          return {\n            loader: \"jsx\",\n            contents: 'export default \"hi there!\"'\n          };\n        }\n      });\n    }\n\n  };\n};","map":{"version":3,"sources":["C:/Users/Ryzen/Desktop/Udemy/React and Typescript (Stephen Grider)/jbook/src/plugins/unpkg-path-plugin.ts"],"names":["unpkgPathPlugin","name","setup","build","onResolve","filter","args","console","log","path","namespace","onLoad","loader","contents"],"mappings":"AAEA,OAAO,MAAMA,eAAe,GAAG,MAAM;AACpC,SAAO;AACNC,IAAAA,IAAI,EAAE,mBADA;;AAENC,IAAAA,KAAK,CAACC,KAAD,EAA6B;AACjC;AACAA,MAAAA,KAAK,CAACC,SAAN,CAAgB;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAAhB,EAAkC,MAAOC,IAAP,IAAqB;AACtDC,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBF,IAAxB,EADsD,CAEtD;;AACA,eAAO;AAAEG,UAAAA,IAAI,EAAEH,IAAI,CAACG,IAAb;AAAmBC,UAAAA,SAAS,EAAE;AAA9B,SAAP;AACA,OAJD;AAMAP,MAAAA,KAAK,CAACQ,MAAN,CAAa;AAAEN,QAAAA,MAAM,EAAE;AAAV,OAAb,EAA+B,MAAOC,IAAP,IAAqB;AACnDC,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,IAAtB;;AAEA,YAAIA,IAAI,CAACG,IAAL,KAAc,UAAlB,EAA8B;AAC7B,iBAAO;AACNG,YAAAA,MAAM,EAAE,KADF;AAENC,YAAAA,QAAQ,EACN;AACR;AACA;AACA;AANY,WAAP;AAQA,SATD,MASO;AACN,iBAAO;AACND,YAAAA,MAAM,EAAE,KADF;AAENC,YAAAA,QAAQ,EAAE;AAFJ,WAAP;AAIA;AACD,OAlBD;AAmBA;;AA7BK,GAAP;AA+BA,CAhCM","sourcesContent":["import * as esbuild from \"esbuild-wasm\";\r\n\r\nexport const unpkgPathPlugin = () => {\r\n\treturn {\r\n\t\tname: \"unpkg-path-plugin\",\r\n\t\tsetup(build: esbuild.PluginBuild) {\r\n\t\t\t// esbuild figuring out where the index.js file is stored\r\n\t\t\tbuild.onResolve({ filter: /.*/ }, async (args: any) => {\r\n\t\t\t\tconsole.log(\"onResole\", args);\r\n\t\t\t\t// returns the found path\r\n\t\t\t\treturn { path: args.path, namespace: \"a\" };\r\n\t\t\t});\r\n\r\n\t\t\tbuild.onLoad({ filter: /.*/ }, async (args: any) => {\r\n\t\t\t\tconsole.log(\"onLoad\", args);\r\n\r\n\t\t\t\tif (args.path === \"index.js\") {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tloader: \"jsx\",\r\n\t\t\t\t\t\tcontents:\r\n\t\t\t\t\t\t\t`\r\n              import message from './message';\r\n              console.log(message);\r\n            `\r\n\t\t\t\t\t};\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tloader: \"jsx\",\r\n\t\t\t\t\t\tcontents: 'export default \"hi there!\"'\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n};\r\n"]},"metadata":{},"sourceType":"module"}