{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ryzen\\\\Desktop\\\\jbook\\\\src\\\\components\\\\code-cell.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport CodeEditor from \"./code-editor\";\nimport Preview from \"./preview\";\nimport bundle from \"../bundler\";\nimport Resizable from \"./resizable\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CodeCell = () => {\n  _s();\n\n  const [code, setCode] = useState(\"\");\n  const [input, setInput] = useState(\"\");\n\n  const onClick = async () => {\n    const output = await bundle(input);\n    output && setCode(output);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Resizable, {\n    direction: \"vertical\",\n    width: 500,\n    height: 500,\n    resizeHandles: [\"s\"],\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(CodeEditor, {\n        initialValue: \"const a = 1;\",\n        onChange: value => setInput(value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onClick,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Preview, {\n        code: code\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 3\n  }, this);\n};\n\n_s(CodeCell, \"tbQA7pdXBWiDvms4m9TsipJRwls=\");\n\n_c = CodeCell;\nexport default CodeCell;\n\nvar _c;\n\n$RefreshReg$(_c, \"CodeCell\");","map":{"version":3,"sources":["C:/Users/Ryzen/Desktop/jbook/src/components/code-cell.tsx"],"names":["useState","CodeEditor","Preview","bundle","Resizable","CodeCell","code","setCode","input","setInput","onClick","output","value"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,MAAP,MAAmB,YAAnB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACtB,QAAM,CAAEC,IAAF,EAAQC,OAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAAEQ,KAAF,EAASC,QAAT,IAAsBT,QAAQ,CAAC,EAAD,CAApC;;AAEA,QAAMU,OAAO,GAAG,YAAY;AAC3B,UAAMC,MAAM,GAAG,MAAMR,MAAM,CAACK,KAAD,CAA3B;AACAG,IAAAA,MAAM,IAAIJ,OAAO,CAACI,MAAD,CAAjB;AACA,GAHD;;AAKA,sBACC,QAAC,SAAD;AAAW,IAAA,SAAS,EAAC,UAArB;AAAgC,IAAA,KAAK,EAAE,GAAvC;AAA4C,IAAA,MAAM,EAAE,GAApD;AAAyD,IAAA,aAAa,EAAE,CAAE,GAAF,CAAxE;AAAA,2BACC;AAAA,8BACC,QAAC,UAAD;AAAY,QAAA,YAAY,EAAC,cAAzB;AAAwC,QAAA,QAAQ,EAAGC,KAAD,IAAWH,QAAQ,CAACG,KAAD;AAArE;AAAA;AAAA;AAAA;AAAA,cADD,eAEC;AAAA,+BACC;AAAQ,UAAA,OAAO,EAAEF,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,cAFD,eAKC,QAAC,OAAD;AAAS,QAAA,IAAI,EAAEJ;AAAf;AAAA;AAAA;AAAA;AAAA,cALD;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADD;AAWA,CApBD;;GAAMD,Q;;KAAAA,Q;AAsBN,eAAeA,QAAf","sourcesContent":["import { useState } from \"react\";\r\nimport CodeEditor from \"./code-editor\";\r\nimport Preview from \"./preview\";\r\nimport bundle from \"../bundler\";\r\nimport Resizable from \"./resizable\";\r\n\r\nconst CodeCell = () => {\r\n\tconst [ code, setCode ] = useState(\"\");\r\n\tconst [ input, setInput ] = useState(\"\");\r\n\r\n\tconst onClick = async () => {\r\n\t\tconst output = await bundle(input);\r\n\t\toutput && setCode(output);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Resizable direction=\"vertical\" width={500} height={500} resizeHandles={[ \"s\" ]}>\r\n\t\t\t<div>\r\n\t\t\t\t<CodeEditor initialValue=\"const a = 1;\" onChange={(value) => setInput(value)} />\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<button onClick={onClick}>Submit</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<Preview code={code} />\r\n\t\t\t</div>\r\n\t\t</Resizable>\r\n\t);\r\n};\r\n\r\nexport default CodeCell;\r\n"]},"metadata":{},"sourceType":"module"}