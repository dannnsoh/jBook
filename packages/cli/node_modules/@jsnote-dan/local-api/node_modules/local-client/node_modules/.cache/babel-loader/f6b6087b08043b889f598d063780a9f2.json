{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ryzen\\\\Desktop\\\\jbook\\\\src\\\\components\\\\resizable.tsx\",\n    _s = $RefreshSig$();\n\nimport \"./resizable.css\";\nimport { useState, useEffect } from \"react\";\nimport { ResizableBox } from \"react-resizable\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Resizable = _ref => {\n  _s();\n\n  let {\n    direction,\n    children\n  } = _ref;\n  const [innerWidth, setInnerWidth] = useState(window.innerWidth);\n  const [innerHeight, setInnerHeight] = useState(window.innerHeight);\n  let resizableAttr;\n  useEffect(() => {\n    const listener = () => {\n      console.log(window.innerWidth, window.innerHeight);\n    };\n\n    window.addEventListener(\"resize\", listener); // cleanup\n\n    return () => {\n      window.removeEventListener(\"resize\", listener);\n    };\n  }, []);\n\n  if (direction === \"horizontal\") {\n    resizableAttr = {\n      className: \"resize-horizontal\",\n      width: window.innerWidth * 0.75,\n      height: Infinity,\n      resizeHandles: [\"e\"],\n      maxConstraints: [window.innerWidth * 0.75, Infinity],\n      minConstraints: [window.innerWidth * 0.2, Infinity]\n    };\n  } else {\n    resizableAttr = {\n      width: Infinity,\n      height: 400,\n      resizeHandles: [\"s\"],\n      maxConstraints: [Infinity, window.innerHeight * 0.9],\n      minConstraints: [Infinity, 100]\n    };\n  }\n\n  return /*#__PURE__*/_jsxDEV(ResizableBox, { ...resizableAttr,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Resizable, \"+m/M/LbnDAMv7EqfWnUQiQxanNI=\");\n\n_c = Resizable;\nexport default Resizable;\n\nvar _c;\n\n$RefreshReg$(_c, \"Resizable\");","map":{"version":3,"sources":["C:/Users/Ryzen/Desktop/jbook/src/components/resizable.tsx"],"names":["useState","useEffect","ResizableBox","Resizable","direction","children","innerWidth","setInnerWidth","window","innerHeight","setInnerHeight","resizableAttr","listener","console","log","addEventListener","removeEventListener","className","width","height","Infinity","resizeHandles","maxConstraints","minConstraints"],"mappings":";;;AAAA,OAAO,iBAAP;AACA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,YAAT,QAAgD,iBAAhD;;;AAOA,MAAMC,SAAS,GAAG,QAA6C;AAAA;;AAAA,MAA5C;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,GAA4C;AAC9D,QAAM,CAAEC,UAAF,EAAcC,aAAd,IAAgCP,QAAQ,CAACQ,MAAM,CAACF,UAAR,CAA9C;AACA,QAAM,CAAEG,WAAF,EAAeC,cAAf,IAAkCV,QAAQ,CAACQ,MAAM,CAACC,WAAR,CAAhD;AACA,MAAIE,aAAJ;AAEAV,EAAAA,SAAS,CAAC,MAAM;AACf,UAAMW,QAAQ,GAAG,MAAM;AACtBC,MAAAA,OAAO,CAACC,GAAR,CAAYN,MAAM,CAACF,UAAnB,EAA+BE,MAAM,CAACC,WAAtC;AACA,KAFD;;AAGAD,IAAAA,MAAM,CAACO,gBAAP,CAAwB,QAAxB,EAAkCH,QAAlC,EAJe,CAKf;;AACA,WAAO,MAAM;AACZJ,MAAAA,MAAM,CAACQ,mBAAP,CAA2B,QAA3B,EAAqCJ,QAArC;AACA,KAFD;AAGA,GATQ,EASN,EATM,CAAT;;AAWA,MAAIR,SAAS,KAAK,YAAlB,EAAgC;AAC/BO,IAAAA,aAAa,GAAG;AACfM,MAAAA,SAAS,EAAE,mBADI;AAEfC,MAAAA,KAAK,EAAEV,MAAM,CAACF,UAAP,GAAoB,IAFZ;AAGfa,MAAAA,MAAM,EAAEC,QAHO;AAIfC,MAAAA,aAAa,EAAE,CAAE,GAAF,CAJA;AAKfC,MAAAA,cAAc,EAAE,CAAEd,MAAM,CAACF,UAAP,GAAoB,IAAtB,EAA4Bc,QAA5B,CALD;AAMfG,MAAAA,cAAc,EAAE,CAAEf,MAAM,CAACF,UAAP,GAAoB,GAAtB,EAA2Bc,QAA3B;AAND,KAAhB;AAQA,GATD,MASO;AACNT,IAAAA,aAAa,GAAG;AACfO,MAAAA,KAAK,EAAEE,QADQ;AAEfD,MAAAA,MAAM,EAAE,GAFO;AAGfE,MAAAA,aAAa,EAAE,CAAE,GAAF,CAHA;AAIfC,MAAAA,cAAc,EAAE,CAAEF,QAAF,EAAYZ,MAAM,CAACC,WAAP,GAAqB,GAAjC,CAJD;AAKfc,MAAAA,cAAc,EAAE,CAAEH,QAAF,EAAY,GAAZ;AALD,KAAhB;AAOA;;AAED,sBAAO,QAAC,YAAD,OAAkBT,aAAlB;AAAA,cAAkCN;AAAlC;AAAA;AAAA;AAAA;AAAA,UAAP;AACA,CApCD;;GAAMF,S;;KAAAA,S;AAsCN,eAAeA,SAAf","sourcesContent":["import \"./resizable.css\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { ResizableBox, ResizableBoxProps } from \"react-resizable\";\r\n\r\ninterface ResizableProps {\r\n\tdirection: \"horizontal\" | \"vertical\";\r\n\tchildren: React.ReactNode;\r\n}\r\n\r\nconst Resizable = ({ direction, children }: ResizableProps) => {\r\n\tconst [ innerWidth, setInnerWidth ] = useState(window.innerWidth);\r\n\tconst [ innerHeight, setInnerHeight ] = useState(window.innerHeight);\r\n\tlet resizableAttr: ResizableBoxProps;\r\n\r\n\tuseEffect(() => {\r\n\t\tconst listener = () => {\r\n\t\t\tconsole.log(window.innerWidth, window.innerHeight);\r\n\t\t};\r\n\t\twindow.addEventListener(\"resize\", listener);\r\n\t\t// cleanup\r\n\t\treturn () => {\r\n\t\t\twindow.removeEventListener(\"resize\", listener);\r\n\t\t};\r\n\t}, []);\r\n\r\n\tif (direction === \"horizontal\") {\r\n\t\tresizableAttr = {\r\n\t\t\tclassName: \"resize-horizontal\",\r\n\t\t\twidth: window.innerWidth * 0.75,\r\n\t\t\theight: Infinity,\r\n\t\t\tresizeHandles: [ \"e\" ],\r\n\t\t\tmaxConstraints: [ window.innerWidth * 0.75, Infinity ],\r\n\t\t\tminConstraints: [ window.innerWidth * 0.2, Infinity ]\r\n\t\t};\r\n\t} else {\r\n\t\tresizableAttr = {\r\n\t\t\twidth: Infinity,\r\n\t\t\theight: 400,\r\n\t\t\tresizeHandles: [ \"s\" ],\r\n\t\t\tmaxConstraints: [ Infinity, window.innerHeight * 0.9 ],\r\n\t\t\tminConstraints: [ Infinity, 100 ]\r\n\t\t};\r\n\t}\r\n\r\n\treturn <ResizableBox {...resizableAttr}>{children}</ResizableBox>;\r\n};\r\n\r\nexport default Resizable;\r\n"]},"metadata":{},"sourceType":"module"}